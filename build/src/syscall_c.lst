GAS LISTING /tmp/ccNDN0kf.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z9mem_allocm
   9              	_Z9mem_allocm:
  10              	.LFB40:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** //
   2:src/syscall_c.cpp **** // Created by os on 6/22/22.
   3:src/syscall_c.cpp **** //
   4:src/syscall_c.cpp **** #include "../h/syscall_c.h"
   5:src/syscall_c.cpp **** #include "../h/Scheduler.hpp"
   6:src/syscall_c.cpp **** #include "../h/tcb.hpp"
   7:src/syscall_c.cpp **** 
   8:src/syscall_c.cpp **** /* ================================================================================================
   9:src/syscall_c.cpp ****  * This file contains the system calls to the riscv.cpp file that handles the codes of the specific
  10:src/syscall_c.cpp ****  * ================================================================================================
  11:src/syscall_c.cpp ****  * */
  12:src/syscall_c.cpp **** 
  13:src/syscall_c.cpp **** void* mem_alloc(size_t size){
  12              		.loc 1 13 29
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  14:src/syscall_c.cpp ****     if(size <= 0) return nullptr;
  21              		.loc 1 14 5
  22 000c 630C0502 		beqz	a0,.L4
  15:src/syscall_c.cpp ****     uint64 numBlocks = (size + 24)/MEM_BLOCK_SIZE + ((size + 24) % MEM_BLOCK_SIZE ? 1 : 0);
  23              		.loc 1 15 5
  24              		.loc 1 15 30 is_stmt 0
  25 0010 13058501 		addi	a0,a0,24
  26              	.LVL1:
  27              		.loc 1 15 35
  28 0014 93576500 		srli	a5,a0,6
  29              		.loc 1 15 66
  30 0018 1375F503 		andi	a0,a0,63
  31              	.LVL2:
  32              		.loc 1 15 83
  33 001c 63040500 		beqz	a0,.L3
  34 0020 13051000 		li	a0,1
  35              	.L3:
  36              		.loc 1 15 12 discriminator 4
  37 0024 3385A700 		add	a0,a5,a0
  38              	.LVL3:
  16:src/syscall_c.cpp ****     void* address = nullptr;
  39              		.loc 1 16 5 is_stmt 1 discriminator 4
  17:src/syscall_c.cpp ****     __asm__ volatile ("mv a1, %0" : : "r" (numBlocks));
  40              		.loc 1 17 5 discriminator 4
  41              		.loc 1 17 55 is_stmt 0 discriminator 4
GAS LISTING /tmp/ccNDN0kf.s 			page 2


  42              	#APP
  43              	# 17 "src/syscall_c.cpp" 1
  18              	    __asm__ volatile ("li a0, 1");
  44              		mv a1, a0
  45              	# 0 "" 2
  46              		.loc 1 18 5 is_stmt 1 discriminator 4
  47              		.loc 1 18 34 is_stmt 0 discriminator 4
  48              	# 18 "src/syscall_c.cpp" 1
  19              	    __asm__ volatile ("ecall");
  49              		li a0, 1
  50              	# 0 "" 2
  51              		.loc 1 19 5 is_stmt 1 discriminator 4
  52              		.loc 1 19 31 is_stmt 0 discriminator 4
  53              	# 19 "src/syscall_c.cpp" 1
  20              	    __asm__ volatile ("mv %0, a0" : "=r" (address));
  54              		ecall
  55              	# 0 "" 2
  56              		.loc 1 20 5 is_stmt 1 discriminator 4
  57              		.loc 1 20 52 is_stmt 0 discriminator 4
  58              	# 20 "src/syscall_c.cpp" 1
  21              	    return address;
  59              		mv a0, a0
  60              	# 0 "" 2
  61              	.LVL4:
  62              		.loc 1 21 5 is_stmt 1 discriminator 4
  63              	#NO_APP
  64              	.L1:
  22:src/syscall_c.cpp **** }
  65              		.loc 1 22 1 is_stmt 0
  66 0038 03348100 		ld	s0,8(sp)
  67              		.cfi_remember_state
  68              		.cfi_restore 8
  69              		.cfi_def_cfa 2, 16
  70 003c 13010101 		addi	sp,sp,16
  71              		.cfi_def_cfa_offset 0
  72 0040 67800000 		jr	ra
  73              	.LVL5:
  74              	.L4:
  75              		.cfi_restore_state
  14:src/syscall_c.cpp ****     uint64 numBlocks = (size + 24)/MEM_BLOCK_SIZE + ((size + 24) % MEM_BLOCK_SIZE ? 1 : 0);
  76              		.loc 1 14 26
  77 0044 13050000 		li	a0,0
  78              	.LVL6:
  79 0048 6FF01FFF 		j	.L1
  80              		.cfi_endproc
  81              	.LFE40:
  83              		.align	2
  84              		.globl	_Z8mem_freePv
  86              	_Z8mem_freePv:
  87              	.LFB41:
  23:src/syscall_c.cpp **** 
  24:src/syscall_c.cpp **** void mem_free(void* address){
  88              		.loc 1 24 29 is_stmt 1
  89              		.cfi_startproc
  90              	.LVL7:
  91 004c 130101FF 		addi	sp,sp,-16
  92              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccNDN0kf.s 			page 3


  93 0050 23348100 		sd	s0,8(sp)
  94              		.cfi_offset 8, -8
  95 0054 13040101 		addi	s0,sp,16
  96              		.cfi_def_cfa 8, 0
  25:src/syscall_c.cpp ****     __asm__ volatile ("mv a1, %0" : : "r" (address));
  97              		.loc 1 25 5
  98              		.loc 1 25 53 is_stmt 0
  99              	#APP
 100              	# 25 "src/syscall_c.cpp" 1
  26              	    __asm__ volatile ("li a0, 0x02");
 101              		mv a1, a0
 102              	# 0 "" 2
 103              		.loc 1 26 5 is_stmt 1
 104              		.loc 1 26 37 is_stmt 0
 105              	# 26 "src/syscall_c.cpp" 1
  27              	    __asm__ volatile ("ecall");
 106              		li a0, 0x02
 107              	# 0 "" 2
 108              		.loc 1 27 5 is_stmt 1
 109              		.loc 1 27 31 is_stmt 0
 110              	# 27 "src/syscall_c.cpp" 1
  28              	}
 111              		ecall
 112              	# 0 "" 2
 113              		.loc 1 28 1
 114              	#NO_APP
 115 0064 03348100 		ld	s0,8(sp)
 116              		.cfi_restore 8
 117              		.cfi_def_cfa 2, 16
 118 0068 13010101 		addi	sp,sp,16
 119              		.cfi_def_cfa_offset 0
 120 006c 67800000 		jr	ra
 121              		.cfi_endproc
 122              	.LFE41:
 124              		.align	2
 125              		.globl	_Z13thread_createPP3CCBPFvPvES2_
 127              	_Z13thread_createPP3CCBPFvPvES2_:
 128              	.LFB42:
  29:src/syscall_c.cpp **** 
  30:src/syscall_c.cpp **** int thread_create(thread_t* handle, void (*start_routine)(void*), void* args){
 129              		.loc 1 30 78 is_stmt 1
 130              		.cfi_startproc
 131              	.LVL8:
 132 0070 130101FF 		addi	sp,sp,-16
 133              		.cfi_def_cfa_offset 16
 134 0074 23348100 		sd	s0,8(sp)
 135              		.cfi_offset 8, -8
 136 0078 13040101 		addi	s0,sp,16
 137              		.cfi_def_cfa 8, 0
  31:src/syscall_c.cpp ****     __asm__ volatile("mv a3, %0" : : "r" (args));
 138              		.loc 1 31 5
 139              		.loc 1 31 49 is_stmt 0
 140              	#APP
 141              	# 31 "src/syscall_c.cpp" 1
  32              	    __asm__ volatile("mv a2, %0" : : "r" (start_routine));
 142              		mv a3, a2
 143              	# 0 "" 2
GAS LISTING /tmp/ccNDN0kf.s 			page 4


 144              		.loc 1 32 5 is_stmt 1
 145              		.loc 1 32 58 is_stmt 0
 146              	# 32 "src/syscall_c.cpp" 1
  33              	    __asm__ volatile("mv a1, %0" : : "r" (handle));
 147              		mv a2, a1
 148              	# 0 "" 2
 149              		.loc 1 33 5 is_stmt 1
 150              		.loc 1 33 51 is_stmt 0
 151              	# 33 "src/syscall_c.cpp" 1
  34              	    __asm__ volatile("li a0, 0x11");
 152              		mv a1, a0
 153              	# 0 "" 2
 154              		.loc 1 34 5 is_stmt 1
 155              		.loc 1 34 36 is_stmt 0
 156              	# 34 "src/syscall_c.cpp" 1
  35              	    __asm__ volatile("ecall");
 157              		li a0, 0x11
 158              	# 0 "" 2
 159              		.loc 1 35 5 is_stmt 1
 160              		.loc 1 35 30 is_stmt 0
 161              	# 35 "src/syscall_c.cpp" 1
  36              	    return 0;
 162              		ecall
 163              	# 0 "" 2
 164              		.loc 1 36 5 is_stmt 1
  37:src/syscall_c.cpp **** }
 165              		.loc 1 37 1 is_stmt 0
 166              	#NO_APP
 167 0090 13050000 		li	a0,0
 168              	.LVL9:
 169 0094 03348100 		ld	s0,8(sp)
 170              		.cfi_restore 8
 171              		.cfi_def_cfa 2, 16
 172 0098 13010101 		addi	sp,sp,16
 173              		.cfi_def_cfa_offset 0
 174 009c 67800000 		jr	ra
 175              		.cfi_endproc
 176              	.LFE42:
 178              		.align	2
 179              		.globl	_Z15thread_dispatchv
 181              	_Z15thread_dispatchv:
 182              	.LFB43:
  38:src/syscall_c.cpp **** 
  39:src/syscall_c.cpp **** void thread_dispatch(){
 183              		.loc 1 39 23 is_stmt 1
 184              		.cfi_startproc
 185 00a0 130101FF 		addi	sp,sp,-16
 186              		.cfi_def_cfa_offset 16
 187 00a4 23348100 		sd	s0,8(sp)
 188              		.cfi_offset 8, -8
 189 00a8 13040101 		addi	s0,sp,16
 190              		.cfi_def_cfa 8, 0
  40:src/syscall_c.cpp ****     __asm__ volatile("li a0, 0x13");
 191              		.loc 1 40 5
 192              		.loc 1 40 36 is_stmt 0
 193              	#APP
 194              	# 40 "src/syscall_c.cpp" 1
GAS LISTING /tmp/ccNDN0kf.s 			page 5


  41              	    __asm__ volatile("ecall");
 195              		li a0, 0x13
 196              	# 0 "" 2
 197              		.loc 1 41 5 is_stmt 1
 198              		.loc 1 41 30 is_stmt 0
 199              	# 41 "src/syscall_c.cpp" 1
  42              	}
 200              		ecall
 201              	# 0 "" 2
 202              		.loc 1 42 1
 203              	#NO_APP
 204 00b4 03348100 		ld	s0,8(sp)
 205              		.cfi_restore 8
 206              		.cfi_def_cfa 2, 16
 207 00b8 13010101 		addi	sp,sp,16
 208              		.cfi_def_cfa_offset 0
 209 00bc 67800000 		jr	ra
 210              		.cfi_endproc
 211              	.LFE43:
 213              		.align	2
 214              		.globl	_Z11thread_exitv
 216              	_Z11thread_exitv:
 217              	.LFB44:
  43:src/syscall_c.cpp **** 
  44:src/syscall_c.cpp **** int thread_exit(){
 218              		.loc 1 44 18 is_stmt 1
 219              		.cfi_startproc
 220 00c0 130101FF 		addi	sp,sp,-16
 221              		.cfi_def_cfa_offset 16
 222 00c4 23348100 		sd	s0,8(sp)
 223              		.cfi_offset 8, -8
 224 00c8 13040101 		addi	s0,sp,16
 225              		.cfi_def_cfa 8, 0
  45:src/syscall_c.cpp ****     __asm__ volatile ("li a0, 0x12");
 226              		.loc 1 45 5
 227              		.loc 1 45 37 is_stmt 0
 228              	#APP
 229              	# 45 "src/syscall_c.cpp" 1
  46              	    __asm__ volatile ("ecall");
 230              		li a0, 0x12
 231              	# 0 "" 2
 232              		.loc 1 46 5 is_stmt 1
 233              		.loc 1 46 31 is_stmt 0
 234              	# 46 "src/syscall_c.cpp" 1
  47              	    return 0;
 235              		ecall
 236              	# 0 "" 2
 237              		.loc 1 47 5 is_stmt 1
  48:src/syscall_c.cpp **** }
 238              		.loc 1 48 1 is_stmt 0
 239              	#NO_APP
 240 00d4 13050000 		li	a0,0
 241 00d8 03348100 		ld	s0,8(sp)
 242              		.cfi_restore 8
 243              		.cfi_def_cfa 2, 16
 244 00dc 13010101 		addi	sp,sp,16
 245              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccNDN0kf.s 			page 6


 246 00e0 67800000 		jr	ra
 247              		.cfi_endproc
 248              	.LFE44:
 250              		.align	2
 251              		.globl	_Z25thread_create_NOT_STARTEDPP3CCBPFvPvES2_
 253              	_Z25thread_create_NOT_STARTEDPP3CCBPFvPvES2_:
 254              	.LFB45:
  49:src/syscall_c.cpp **** 
  50:src/syscall_c.cpp **** int thread_create_NOT_STARTED(thread_t* handle, void (*start_routine)(void*), void* args){
 255              		.loc 1 50 90 is_stmt 1
 256              		.cfi_startproc
 257              	.LVL10:
 258 00e4 130101FF 		addi	sp,sp,-16
 259              		.cfi_def_cfa_offset 16
 260 00e8 23348100 		sd	s0,8(sp)
 261              		.cfi_offset 8, -8
 262 00ec 13040101 		addi	s0,sp,16
 263              		.cfi_def_cfa 8, 0
  51:src/syscall_c.cpp ****     __asm__ volatile("mv a3, %0" : : "r" (args));
 264              		.loc 1 51 5
 265              		.loc 1 51 49 is_stmt 0
 266              	#APP
 267              	# 51 "src/syscall_c.cpp" 1
  52              	    __asm__ volatile("mv a2, %0" : : "r" (start_routine));
 268              		mv a3, a2
 269              	# 0 "" 2
 270              		.loc 1 52 5 is_stmt 1
 271              		.loc 1 52 58 is_stmt 0
 272              	# 52 "src/syscall_c.cpp" 1
  53              	    __asm__ volatile("mv a1, %0" : : "r" (handle));
 273              		mv a2, a1
 274              	# 0 "" 2
 275              		.loc 1 53 5 is_stmt 1
 276              		.loc 1 53 51 is_stmt 0
 277              	# 53 "src/syscall_c.cpp" 1
  54              	    __asm__ volatile("li a0, 0x11");
 278              		mv a1, a0
 279              	# 0 "" 2
 280              		.loc 1 54 5 is_stmt 1
 281              		.loc 1 54 36 is_stmt 0
 282              	# 54 "src/syscall_c.cpp" 1
  55              	    __asm__ volatile("ecall");
 283              		li a0, 0x11
 284              	# 0 "" 2
 285              		.loc 1 55 5 is_stmt 1
 286              		.loc 1 55 30 is_stmt 0
 287              	# 55 "src/syscall_c.cpp" 1
  56              	    return 0;
 288              		ecall
 289              	# 0 "" 2
 290              		.loc 1 56 5 is_stmt 1
  57:src/syscall_c.cpp **** }
 291              		.loc 1 57 1 is_stmt 0
 292              	#NO_APP
 293 0104 13050000 		li	a0,0
 294              	.LVL11:
 295 0108 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/ccNDN0kf.s 			page 7


 296              		.cfi_restore 8
 297              		.cfi_def_cfa 2, 16
 298 010c 13010101 		addi	sp,sp,16
 299              		.cfi_def_cfa_offset 0
 300 0110 67800000 		jr	ra
 301              		.cfi_endproc
 302              	.LFE45:
 304              	.Letext0:
 305              		.file 2 "src/../h/../lib/hw.h"
 306              		.file 3 "src/../h/syscall_c.h"
 307              		.file 4 "src/../h/tcb.hpp"
GAS LISTING /tmp/ccNDN0kf.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccNDN0kf.s:9      .text:0000000000000000 _Z9mem_allocm
     /tmp/ccNDN0kf.s:13     .text:0000000000000000 .L0 
     /tmp/ccNDN0kf.s:15     .text:0000000000000000 .L0 
     /tmp/ccNDN0kf.s:16     .text:0000000000000004 .L0 
     /tmp/ccNDN0kf.s:18     .text:0000000000000008 .L0 
     /tmp/ccNDN0kf.s:20     .text:000000000000000c .L0 
     /tmp/ccNDN0kf.s:22     .text:000000000000000c .L0 
     /tmp/ccNDN0kf.s:24     .text:0000000000000010 .L0 
     /tmp/ccNDN0kf.s:25     .text:0000000000000010 .L0 
     /tmp/ccNDN0kf.s:28     .text:0000000000000014 .L0 
     /tmp/ccNDN0kf.s:30     .text:0000000000000018 .L0 
     /tmp/ccNDN0kf.s:33     .text:000000000000001c .L0 
     /tmp/ccNDN0kf.s:37     .text:0000000000000024 .L0 
     /tmp/ccNDN0kf.s:40     .text:0000000000000028 .L0 
     /tmp/ccNDN0kf.s:41     .text:0000000000000028 .L0 
   src/syscall_c.cpp:17     .text:0000000000000028 .L0 
     /tmp/ccNDN0kf.s:47     .text:000000000000002c .L0 
   src/syscall_c.cpp:18     .text:000000000000002c .L0 
     /tmp/ccNDN0kf.s:52     .text:0000000000000030 .L0 
   src/syscall_c.cpp:19     .text:0000000000000030 .L0 
     /tmp/ccNDN0kf.s:57     .text:0000000000000034 .L0 
   src/syscall_c.cpp:20     .text:0000000000000034 .L0 
     /tmp/ccNDN0kf.s:65     .text:0000000000000038 .L0 
     /tmp/ccNDN0kf.s:66     .text:0000000000000038 .L0 
     /tmp/ccNDN0kf.s:67     .text:000000000000003c .L0 
     /tmp/ccNDN0kf.s:68     .text:000000000000003c .L0 
     /tmp/ccNDN0kf.s:69     .text:000000000000003c .L0 
     /tmp/ccNDN0kf.s:71     .text:0000000000000040 .L0 
     /tmp/ccNDN0kf.s:75     .text:0000000000000044 .L0 
     /tmp/ccNDN0kf.s:77     .text:0000000000000044 .L0 
     /tmp/ccNDN0kf.s:80     .text:000000000000004c .L0 
     /tmp/ccNDN0kf.s:86     .text:000000000000004c _Z8mem_freePv
     /tmp/ccNDN0kf.s:89     .text:000000000000004c .L0 
     /tmp/ccNDN0kf.s:91     .text:000000000000004c .L0 
     /tmp/ccNDN0kf.s:92     .text:0000000000000050 .L0 
     /tmp/ccNDN0kf.s:94     .text:0000000000000054 .L0 
     /tmp/ccNDN0kf.s:96     .text:0000000000000058 .L0 
     /tmp/ccNDN0kf.s:98     .text:0000000000000058 .L0 
   src/syscall_c.cpp:25     .text:0000000000000058 .L0 
     /tmp/ccNDN0kf.s:104    .text:000000000000005c .L0 
   src/syscall_c.cpp:26     .text:000000000000005c .L0 
     /tmp/ccNDN0kf.s:109    .text:0000000000000060 .L0 
   src/syscall_c.cpp:27     .text:0000000000000060 .L0 
     /tmp/ccNDN0kf.s:115    .text:0000000000000064 .L0 
     /tmp/ccNDN0kf.s:116    .text:0000000000000068 .L0 
     /tmp/ccNDN0kf.s:117    .text:0000000000000068 .L0 
     /tmp/ccNDN0kf.s:119    .text:000000000000006c .L0 
     /tmp/ccNDN0kf.s:121    .text:0000000000000070 .L0 
     /tmp/ccNDN0kf.s:127    .text:0000000000000070 _Z13thread_createPP3CCBPFvPvES2_
     /tmp/ccNDN0kf.s:130    .text:0000000000000070 .L0 
     /tmp/ccNDN0kf.s:132    .text:0000000000000070 .L0 
     /tmp/ccNDN0kf.s:133    .text:0000000000000074 .L0 
     /tmp/ccNDN0kf.s:135    .text:0000000000000078 .L0 
     /tmp/ccNDN0kf.s:137    .text:000000000000007c .L0 
     /tmp/ccNDN0kf.s:139    .text:000000000000007c .L0 
GAS LISTING /tmp/ccNDN0kf.s 			page 9


   src/syscall_c.cpp:31     .text:000000000000007c .L0 
     /tmp/ccNDN0kf.s:145    .text:0000000000000080 .L0 
   src/syscall_c.cpp:32     .text:0000000000000080 .L0 
     /tmp/ccNDN0kf.s:150    .text:0000000000000084 .L0 
   src/syscall_c.cpp:33     .text:0000000000000084 .L0 
     /tmp/ccNDN0kf.s:155    .text:0000000000000088 .L0 
   src/syscall_c.cpp:34     .text:0000000000000088 .L0 
     /tmp/ccNDN0kf.s:160    .text:000000000000008c .L0 
   src/syscall_c.cpp:35     .text:000000000000008c .L0 
     /tmp/ccNDN0kf.s:165    .text:0000000000000090 .L0 
     /tmp/ccNDN0kf.s:167    .text:0000000000000090 .L0 
     /tmp/ccNDN0kf.s:170    .text:0000000000000098 .L0 
     /tmp/ccNDN0kf.s:171    .text:0000000000000098 .L0 
     /tmp/ccNDN0kf.s:173    .text:000000000000009c .L0 
     /tmp/ccNDN0kf.s:175    .text:00000000000000a0 .L0 
     /tmp/ccNDN0kf.s:181    .text:00000000000000a0 _Z15thread_dispatchv
     /tmp/ccNDN0kf.s:184    .text:00000000000000a0 .L0 
     /tmp/ccNDN0kf.s:185    .text:00000000000000a0 .L0 
     /tmp/ccNDN0kf.s:186    .text:00000000000000a4 .L0 
     /tmp/ccNDN0kf.s:188    .text:00000000000000a8 .L0 
     /tmp/ccNDN0kf.s:190    .text:00000000000000ac .L0 
     /tmp/ccNDN0kf.s:192    .text:00000000000000ac .L0 
   src/syscall_c.cpp:40     .text:00000000000000ac .L0 
     /tmp/ccNDN0kf.s:198    .text:00000000000000b0 .L0 
   src/syscall_c.cpp:41     .text:00000000000000b0 .L0 
     /tmp/ccNDN0kf.s:204    .text:00000000000000b4 .L0 
     /tmp/ccNDN0kf.s:205    .text:00000000000000b8 .L0 
     /tmp/ccNDN0kf.s:206    .text:00000000000000b8 .L0 
     /tmp/ccNDN0kf.s:208    .text:00000000000000bc .L0 
     /tmp/ccNDN0kf.s:210    .text:00000000000000c0 .L0 
     /tmp/ccNDN0kf.s:216    .text:00000000000000c0 _Z11thread_exitv
     /tmp/ccNDN0kf.s:219    .text:00000000000000c0 .L0 
     /tmp/ccNDN0kf.s:220    .text:00000000000000c0 .L0 
     /tmp/ccNDN0kf.s:221    .text:00000000000000c4 .L0 
     /tmp/ccNDN0kf.s:223    .text:00000000000000c8 .L0 
     /tmp/ccNDN0kf.s:225    .text:00000000000000cc .L0 
     /tmp/ccNDN0kf.s:227    .text:00000000000000cc .L0 
   src/syscall_c.cpp:45     .text:00000000000000cc .L0 
     /tmp/ccNDN0kf.s:233    .text:00000000000000d0 .L0 
   src/syscall_c.cpp:46     .text:00000000000000d0 .L0 
     /tmp/ccNDN0kf.s:238    .text:00000000000000d4 .L0 
     /tmp/ccNDN0kf.s:240    .text:00000000000000d4 .L0 
     /tmp/ccNDN0kf.s:242    .text:00000000000000dc .L0 
     /tmp/ccNDN0kf.s:243    .text:00000000000000dc .L0 
     /tmp/ccNDN0kf.s:245    .text:00000000000000e0 .L0 
     /tmp/ccNDN0kf.s:247    .text:00000000000000e4 .L0 
     /tmp/ccNDN0kf.s:253    .text:00000000000000e4 _Z25thread_create_NOT_STARTEDPP3CCBPFvPvES2_
     /tmp/ccNDN0kf.s:256    .text:00000000000000e4 .L0 
     /tmp/ccNDN0kf.s:258    .text:00000000000000e4 .L0 
     /tmp/ccNDN0kf.s:259    .text:00000000000000e8 .L0 
     /tmp/ccNDN0kf.s:261    .text:00000000000000ec .L0 
     /tmp/ccNDN0kf.s:263    .text:00000000000000f0 .L0 
     /tmp/ccNDN0kf.s:265    .text:00000000000000f0 .L0 
   src/syscall_c.cpp:51     .text:00000000000000f0 .L0 
     /tmp/ccNDN0kf.s:271    .text:00000000000000f4 .L0 
   src/syscall_c.cpp:52     .text:00000000000000f4 .L0 
     /tmp/ccNDN0kf.s:276    .text:00000000000000f8 .L0 
GAS LISTING /tmp/ccNDN0kf.s 			page 10


   src/syscall_c.cpp:53     .text:00000000000000f8 .L0 
     /tmp/ccNDN0kf.s:281    .text:00000000000000fc .L0 
   src/syscall_c.cpp:54     .text:00000000000000fc .L0 
     /tmp/ccNDN0kf.s:286    .text:0000000000000100 .L0 
   src/syscall_c.cpp:55     .text:0000000000000100 .L0 
     /tmp/ccNDN0kf.s:291    .text:0000000000000104 .L0 
     /tmp/ccNDN0kf.s:293    .text:0000000000000104 .L0 
     /tmp/ccNDN0kf.s:296    .text:000000000000010c .L0 
     /tmp/ccNDN0kf.s:297    .text:000000000000010c .L0 
     /tmp/ccNDN0kf.s:299    .text:0000000000000110 .L0 
     /tmp/ccNDN0kf.s:301    .text:0000000000000114 .L0 
     /tmp/ccNDN0kf.s:308    .text:0000000000000114 .L0 
     /tmp/ccNDN0kf.s:74     .text:0000000000000044 .L4
     /tmp/ccNDN0kf.s:35     .text:0000000000000024 .L3
     /tmp/ccNDN0kf.s:64     .text:0000000000000038 .L1
     /tmp/ccNDN0kf.s:840    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccNDN0kf.s:1701   .debug_str:00000000000003b0 .LASF54
     /tmp/ccNDN0kf.s:1629   .debug_str:0000000000000196 .LASF55
     /tmp/ccNDN0kf.s:1593   .debug_str:000000000000008a .LASF56
     /tmp/ccNDN0kf.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccNDN0kf.s:304    .text:0000000000000114 .Letext0
     /tmp/ccNDN0kf.s:1573   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccNDN0kf.s:1649   .debug_str:0000000000000237 .LASF0
     /tmp/ccNDN0kf.s:1659   .debug_str:000000000000026f .LASF1
     /tmp/ccNDN0kf.s:1641   .debug_str:00000000000001f6 .LASF2
     /tmp/ccNDN0kf.s:1625   .debug_str:0000000000000162 .LASF4
     /tmp/ccNDN0kf.s:1687   .debug_str:0000000000000342 .LASF3
     /tmp/ccNDN0kf.s:1585   .debug_str:0000000000000039 .LASF5
     /tmp/ccNDN0kf.s:1663   .debug_str:0000000000000293 .LASF6
     /tmp/ccNDN0kf.s:1647   .debug_str:0000000000000224 .LASF7
     /tmp/ccNDN0kf.s:1707   .debug_str:0000000000000490 .LASF8
     /tmp/ccNDN0kf.s:1619   .debug_str:0000000000000144 .LASF9
     /tmp/ccNDN0kf.s:1669   .debug_str:00000000000002bf .LASF10
     /tmp/ccNDN0kf.s:1705   .debug_str:0000000000000481 .LASF11
     /tmp/ccNDN0kf.s:1587   .debug_str:0000000000000040 .LASF12
     /tmp/ccNDN0kf.s:1577   .debug_str:0000000000000009 .LASF13
     /tmp/ccNDN0kf.s:1595   .debug_str:00000000000000a9 .LASF14
     /tmp/ccNDN0kf.s:1683   .debug_str:0000000000000326 .LASF15
     /tmp/ccNDN0kf.s:1605   .debug_str:00000000000000eb .LASF16
     /tmp/ccNDN0kf.s:1621   .debug_str:0000000000000152 .LASF17
     /tmp/ccNDN0kf.s:1579   .debug_str:0000000000000019 .LASF57
     /tmp/ccNDN0kf.s:1609   .debug_str:000000000000010f .LASF18
     /tmp/ccNDN0kf.s:1713   .debug_str:00000000000004bd .LASF20
     /tmp/ccNDN0kf.s:1711   .debug_str:00000000000004b0 .LASF19
     /tmp/ccNDN0kf.s:1583   .debug_str:000000000000002d .LASF21
     /tmp/ccNDN0kf.s:1693   .debug_str:0000000000000371 .LASF58
     /tmp/ccNDN0kf.s:1703   .debug_str:0000000000000474 .LASF59
     /tmp/ccNDN0kf.s:1665   .debug_str:00000000000002a6 .LASF45
     /tmp/ccNDN0kf.s:1657   .debug_str:0000000000000258 .LASF47
     /tmp/ccNDN0kf.s:1643   .debug_str:0000000000000204 .LASF22
     /tmp/ccNDN0kf.s:1681   .debug_str:000000000000030f .LASF23
     /tmp/ccNDN0kf.s:1709   .debug_str:00000000000004a0 .LASF24
     /tmp/ccNDN0kf.s:1699   .debug_str:000000000000038d .LASF25
     /tmp/ccNDN0kf.s:1677   .debug_str:00000000000002f0 .LASF60
     /tmp/ccNDN0kf.s:1685   .debug_str:000000000000033c .LASF26
     /tmp/ccNDN0kf.s:1671   .debug_str:00000000000002ce .LASF28
     /tmp/ccNDN0kf.s:1611   .debug_str:0000000000000114 .LASF61
GAS LISTING /tmp/ccNDN0kf.s 			page 11


     /tmp/ccNDN0kf.s:1651   .debug_str:0000000000000244 .LASF27
     /tmp/ccNDN0kf.s:1689   .debug_str:0000000000000354 .LASF29
     /tmp/ccNDN0kf.s:1639   .debug_str:00000000000001e8 .LASF30
     /tmp/ccNDN0kf.s:1589   .debug_str:0000000000000050 .LASF31
     /tmp/ccNDN0kf.s:1645   .debug_str:0000000000000210 .LASF62
     /tmp/ccNDN0kf.s:1631   .debug_str:00000000000001a8 .LASF32
     /tmp/ccNDN0kf.s:1653   .debug_str:000000000000024d .LASF33
     /tmp/ccNDN0kf.s:1655   .debug_str:0000000000000253 .LASF34
     /tmp/ccNDN0kf.s:1633   .debug_str:00000000000001ad .LASF35
     /tmp/ccNDN0kf.s:1675   .debug_str:00000000000002e7 .LASF36
     /tmp/ccNDN0kf.s:1601   .debug_str:00000000000000cf .LASF63
     /tmp/ccNDN0kf.s:1635   .debug_str:00000000000001b5 .LASF64
     /tmp/ccNDN0kf.s:1637   .debug_str:00000000000001dd .LASF65
     /tmp/ccNDN0kf.s:1575   .debug_str:0000000000000000 .LASF37
     /tmp/ccNDN0kf.s:1613   .debug_str:000000000000011c .LASF38
     /tmp/ccNDN0kf.s:1679   .debug_str:00000000000002f5 .LASF41
     /tmp/ccNDN0kf.s:1627   .debug_str:0000000000000169 .LASF43
     /tmp/ccNDN0kf.s:254    .text:00000000000000e4 .LFB45
     /tmp/ccNDN0kf.s:302    .text:0000000000000114 .LFE45
     /tmp/ccNDN0kf.s:1695   .debug_str:0000000000000381 .LASF39
     /tmp/ccNDN0kf.s:1486   .debug_loc:0000000000000000 .LLST4
     /tmp/ccNDN0kf.s:1617   .debug_str:0000000000000136 .LASF40
     /tmp/ccNDN0kf.s:1581   .debug_str:0000000000000021 .LASF66
     /tmp/ccNDN0kf.s:1661   .debug_str:0000000000000282 .LASF67
     /tmp/ccNDN0kf.s:217    .text:00000000000000c0 .LFB44
     /tmp/ccNDN0kf.s:248    .text:00000000000000e4 .LFE44
     /tmp/ccNDN0kf.s:1599   .debug_str:00000000000000bf .LASF68
     /tmp/ccNDN0kf.s:1615   .debug_str:0000000000000121 .LASF69
     /tmp/ccNDN0kf.s:182    .text:00000000000000a0 .LFB43
     /tmp/ccNDN0kf.s:211    .text:00000000000000c0 .LFE43
     /tmp/ccNDN0kf.s:1607   .debug_str:0000000000000101 .LASF42
     /tmp/ccNDN0kf.s:1591   .debug_str:0000000000000069 .LASF44
     /tmp/ccNDN0kf.s:128    .text:0000000000000070 .LFB42
     /tmp/ccNDN0kf.s:176    .text:00000000000000a0 .LFE42
     /tmp/ccNDN0kf.s:1500   .debug_loc:0000000000000039 .LLST3
     /tmp/ccNDN0kf.s:1673   .debug_str:00000000000002de .LASF46
     /tmp/ccNDN0kf.s:1667   .debug_str:00000000000002b1 .LASF48
     /tmp/ccNDN0kf.s:87     .text:000000000000004c .LFB41
     /tmp/ccNDN0kf.s:122    .text:0000000000000070 .LFE41
     /tmp/ccNDN0kf.s:1623   .debug_str:000000000000015a .LASF49
     /tmp/ccNDN0kf.s:1691   .debug_str:0000000000000367 .LASF50
     /tmp/ccNDN0kf.s:1603   .debug_str:00000000000000dd .LASF51
     /tmp/ccNDN0kf.s:10     .text:0000000000000000 .LFB40
     /tmp/ccNDN0kf.s:81     .text:000000000000004c .LFE40
     /tmp/ccNDN0kf.s:1697   .debug_str:0000000000000388 .LASF52
     /tmp/ccNDN0kf.s:1514   .debug_loc:0000000000000072 .LLST0
     /tmp/ccNDN0kf.s:1597   .debug_str:00000000000000b5 .LASF53
     /tmp/ccNDN0kf.s:1545   .debug_loc:00000000000000e9 .LLST1
     /tmp/ccNDN0kf.s:1552   .debug_loc:000000000000010c .LLST2
     /tmp/ccNDN0kf.s:257    .text:00000000000000e4 .LVL10
     /tmp/ccNDN0kf.s:294    .text:0000000000000108 .LVL11
     /tmp/ccNDN0kf.s:131    .text:0000000000000070 .LVL8
     /tmp/ccNDN0kf.s:168    .text:0000000000000094 .LVL9
     /tmp/ccNDN0kf.s:14     .text:0000000000000000 .LVL0
     /tmp/ccNDN0kf.s:26     .text:0000000000000014 .LVL1
     /tmp/ccNDN0kf.s:31     .text:000000000000001c .LVL2
     /tmp/ccNDN0kf.s:73     .text:0000000000000044 .LVL5
GAS LISTING /tmp/ccNDN0kf.s 			page 12


     /tmp/ccNDN0kf.s:78     .text:0000000000000048 .LVL6
     /tmp/ccNDN0kf.s:38     .text:0000000000000028 .LVL3
     /tmp/ccNDN0kf.s:61     .text:0000000000000038 .LVL4
     /tmp/ccNDN0kf.s:309    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
