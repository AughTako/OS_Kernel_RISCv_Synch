GAS LISTING /tmp/ccSLuS9q.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator4initEv
   9              	_ZN15MemoryAllocator4initEv:
  10              	.LFB0:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 4/23/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** BlockHeader* MemoryAllocator::fmem_head = nullptr;
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** void MemoryAllocator::init() {
  12              		.loc 1 9 30
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  10:src/MemoryAllocator.cpp ****     fmem_head = (BlockHeader*) HEAP_START_ADDR;
  20              		.loc 1 10 5
  21              		.loc 1 10 15 is_stmt 0
  22 000c 97070000 		la	a5,HEAP_START_ADDR
  22      83B70700 
  23 0014 03B70700 		ld	a4,0(a5)
  24 0018 97060000 		lla	a3,.LANCHOR0
  24      93860600 
  25 0020 23B0E600 		sd	a4,0(a3)
  11:src/MemoryAllocator.cpp ****     fmem_head->size = (((char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR) / MEM_BLOCK_SIZE);
  26              		.loc 1 11 5 is_stmt 1
  27              		.loc 1 11 25 is_stmt 0
  28 0024 97070000 		la	a5,HEAP_END_ADDR
  28      83B70700 
  29 002c 83B70700 		ld	a5,0(a5)
  30              		.loc 1 11 46
  31 0030 B387E740 		sub	a5,a5,a4
  32              		.loc 1 11 72
  33 0034 93D76700 		srli	a5,a5,6
  34              		.loc 1 11 21
  35 0038 2330F700 		sd	a5,0(a4)
  12:src/MemoryAllocator.cpp ****     fmem_head->prev = fmem_head->next = nullptr;
  36              		.loc 1 12 5 is_stmt 1
  37              		.loc 1 12 34 is_stmt 0
  38 003c 83B70600 		ld	a5,0(a3)
  39              		.loc 1 12 39
  40 0040 23B40700 		sd	zero,8(a5)
  41              		.loc 1 12 21
  42 0044 23B80700 		sd	zero,16(a5)
  13:src/MemoryAllocator.cpp **** }
GAS LISTING /tmp/ccSLuS9q.s 			page 2


  43              		.loc 1 13 1
  44 0048 03348100 		ld	s0,8(sp)
  45              		.cfi_restore 8
  46              		.cfi_def_cfa 2, 16
  47 004c 13010101 		addi	sp,sp,16
  48              		.cfi_def_cfa_offset 0
  49 0050 67800000 		jr	ra
  50              		.cfi_endproc
  51              	.LFE0:
  53              		.align	2
  54              		.globl	_ZN15MemoryAllocator8allocateEm
  56              	_ZN15MemoryAllocator8allocateEm:
  57              	.LFB2:
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** void *MemoryAllocator::allocateB(size_t size) {
  16:src/MemoryAllocator.cpp ****     uint64 numOfBlocks = (size+sizeof(BlockHeader))/MEM_BLOCK_SIZE + ((size+sizeof(BlockHeader)) % 
  17:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
  18:src/MemoryAllocator.cpp **** }
  19:src/MemoryAllocator.cpp **** 
  20:src/MemoryAllocator.cpp **** void* MemoryAllocator::allocate(size_t numOfBlocks) {
  58              		.loc 1 20 53 is_stmt 1
  59              		.cfi_startproc
  60              	.LVL0:
  61 0054 130101FF 		addi	sp,sp,-16
  62              		.cfi_def_cfa_offset 16
  63 0058 23348100 		sd	s0,8(sp)
  64              		.cfi_offset 8, -8
  65 005c 13040101 		addi	s0,sp,16
  66              		.cfi_def_cfa 8, 0
  67 0060 13070500 		mv	a4,a0
  21:src/MemoryAllocator.cpp ****     if (fmem_head == nullptr) return nullptr;
  68              		.loc 1 21 5
  69              		.loc 1 21 19 is_stmt 0
  70 0064 17050000 		ld	a0,.LANCHOR0
  70      03350500 
  71              	.LVL1:
  72              		.loc 1 21 5
  73 006c 630A0508 		beqz	a0,.L3
  22:src/MemoryAllocator.cpp **** 
  23:src/MemoryAllocator.cpp ****     BlockHeader* blk = nullptr;
  74              		.loc 1 23 18
  75 0070 93070000 		li	a5,0
  76 0074 6F004001 		j	.L8
  77              	.LVL2:
  78              	.L20:
  79              	.LBB2:
  24:src/MemoryAllocator.cpp ****     for (BlockHeader* curr = fmem_head; curr; curr = curr->next)
  25:src/MemoryAllocator.cpp ****         if ((!blk && curr->size >= numOfBlocks) || (blk && curr->size >= numOfBlocks && blk->size >
  80              		.loc 1 25 28 discriminator 1
  81 0078 83360500 		ld	a3,0(a0)
  82              		.loc 1 25 19 discriminator 1
  83 007c 63EAE600 		bltu	a3,a4,.L6
  84              		.loc 1 25 118
  85 0080 93070500 		mv	a5,a0
  86              	.LVL3:
  87              	.L7:
  24:src/MemoryAllocator.cpp ****     for (BlockHeader* curr = fmem_head; curr; curr = curr->next)
GAS LISTING /tmp/ccSLuS9q.s 			page 3


  88              		.loc 1 24 5 is_stmt 1 discriminator 2
  24:src/MemoryAllocator.cpp ****     for (BlockHeader* curr = fmem_head; curr; curr = curr->next)
  89              		.loc 1 24 52 is_stmt 0 discriminator 2
  90 0084 03358500 		ld	a0,8(a0)
  91              	.LVL4:
  92              	.L8:
  24:src/MemoryAllocator.cpp ****     for (BlockHeader* curr = fmem_head; curr; curr = curr->next)
  93              		.loc 1 24 41 is_stmt 1 discriminator 1
  94 0088 63020502 		beqz	a0,.L5
  95              		.loc 1 25 9
  96 008c E38607FE 		beqz	a5,.L20
  97              	.L6:
  98              		.loc 1 25 49 is_stmt 0 discriminator 4
  99 0090 E38A07FE 		beqz	a5,.L7
 100              		.loc 1 25 66 discriminator 5
 101 0094 83360500 		ld	a3,0(a0)
 102              		.loc 1 25 57 discriminator 5
 103 0098 E3E6E6FE 		bltu	a3,a4,.L7
 104              		.loc 1 25 94 discriminator 6
 105 009c 03B60700 		ld	a2,0(a5)
 106              		.loc 1 25 86 discriminator 6
 107 00a0 E3F2C6FE 		bgeu	a3,a2,.L7
 108              		.loc 1 25 118
 109 00a4 93070500 		mv	a5,a0
 110              	.LVL5:
 111 00a8 6FF0DFFD 		j	.L7
 112              	.LVL6:
 113              	.L5:
 114              	.LBE2:
  26:src/MemoryAllocator.cpp **** 
  27:src/MemoryAllocator.cpp ****     if (!blk) return nullptr;
 115              		.loc 1 27 5 is_stmt 1
 116 00ac 6380070A 		beqz	a5,.L18
  28:src/MemoryAllocator.cpp **** 
  29:src/MemoryAllocator.cpp ****     size_t remainingNumOfBlocks = blk->size - numOfBlocks;
 117              		.loc 1 29 5
 118              		.loc 1 29 40 is_stmt 0
 119 00b0 83B60700 		ld	a3,0(a5)
 120              		.loc 1 29 12
 121 00b4 3386E640 		sub	a2,a3,a4
 122              	.LVL7:
  30:src/MemoryAllocator.cpp ****     if (remainingNumOfBlocks > 0) {
 123              		.loc 1 30 5 is_stmt 1
 124              	.LBB3:
 125 00b8 6380E606 		beq	a3,a4,.L9
 126              	.LBB4:
  31:src/MemoryAllocator.cpp ****         blk->size = numOfBlocks;
 127              		.loc 1 31 9
 128              		.loc 1 31 19 is_stmt 0
 129 00bc 23B0E700 		sd	a4,0(a5)
  32:src/MemoryAllocator.cpp ****         BlockHeader* newBlk = (BlockHeader*)((char*)blk + numOfBlocks*MEM_BLOCK_SIZE);
 130              		.loc 1 32 9 is_stmt 1
 131              		.loc 1 32 70 is_stmt 0
 132 00c0 13176700 		slli	a4,a4,6
 133              	.LVL8:
 134              		.loc 1 32 22
 135 00c4 3387E700 		add	a4,a5,a4
GAS LISTING /tmp/ccSLuS9q.s 			page 4


 136              	.LVL9:
  33:src/MemoryAllocator.cpp **** 
  34:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = newBlk;
 137              		.loc 1 34 9 is_stmt 1
 138              		.loc 1 34 18 is_stmt 0
 139 00c8 83B68700 		ld	a3,8(a5)
 140              		.loc 1 34 9
 141 00cc 63840600 		beqz	a3,.L10
 142              		.loc 1 34 24 is_stmt 1 discriminator 1
 143              		.loc 1 34 40 is_stmt 0 discriminator 1
 144 00d0 23B8E600 		sd	a4,16(a3)
 145              	.LVL10:
 146              	.L10:
  35:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = newBlk;
 147              		.loc 1 35 9 is_stmt 1
 148              		.loc 1 35 18 is_stmt 0
 149 00d4 83B60701 		ld	a3,16(a5)
 150              		.loc 1 35 9
 151 00d8 638A0602 		beqz	a3,.L11
 152              		.loc 1 35 24 is_stmt 1 discriminator 1
 153              		.loc 1 35 40 is_stmt 0 discriminator 1
 154 00dc 23B4E600 		sd	a4,8(a3)
 155              	.L12:
  36:src/MemoryAllocator.cpp ****         else fmem_head = newBlk;
  37:src/MemoryAllocator.cpp **** 
  38:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 156              		.loc 1 38 9 is_stmt 1
 157              		.loc 1 38 29 is_stmt 0
 158 00e0 83B68700 		ld	a3,8(a5)
 159              		.loc 1 38 22
 160 00e4 2334D700 		sd	a3,8(a4)
  39:src/MemoryAllocator.cpp ****         newBlk->prev = blk->prev;
 161              		.loc 1 39 9 is_stmt 1
 162              		.loc 1 39 29 is_stmt 0
 163 00e8 83B60701 		ld	a3,16(a5)
 164              		.loc 1 39 22
 165 00ec 2338D700 		sd	a3,16(a4)
  40:src/MemoryAllocator.cpp ****         newBlk->size = remainingNumOfBlocks;
 166              		.loc 1 40 9 is_stmt 1
 167              		.loc 1 40 22 is_stmt 0
 168 00f0 2330C700 		sd	a2,0(a4)
 169              	.LVL11:
 170              	.L13:
 171              	.LBE4:
 172              	.LBE3:
  41:src/MemoryAllocator.cpp ****     }
  42:src/MemoryAllocator.cpp ****     else {
  43:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk->prev;
  44:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
  45:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
  46:src/MemoryAllocator.cpp ****     }
  47:src/MemoryAllocator.cpp ****     blk->next = blk->prev = nullptr;
 173              		.loc 1 47 5 is_stmt 1
 174              		.loc 1 47 27 is_stmt 0
 175 00f4 23B80700 		sd	zero,16(a5)
 176              		.loc 1 47 15
 177 00f8 23B40700 		sd	zero,8(a5)
GAS LISTING /tmp/ccSLuS9q.s 			page 5


  48:src/MemoryAllocator.cpp ****     return (char*)blk + sizeof(BlockHeader);
 178              		.loc 1 48 5 is_stmt 1
 179              		.loc 1 48 43 is_stmt 0
 180 00fc 13858701 		addi	a0,a5,24
 181              	.LVL12:
 182              	.L3:
  49:src/MemoryAllocator.cpp **** }
 183              		.loc 1 49 1
 184 0100 03348100 		ld	s0,8(sp)
 185              		.cfi_remember_state
 186              		.cfi_restore 8
 187              		.cfi_def_cfa 2, 16
 188 0104 13010101 		addi	sp,sp,16
 189              		.cfi_def_cfa_offset 0
 190 0108 67800000 		jr	ra
 191              	.LVL13:
 192              	.L11:
 193              		.cfi_restore_state
 194              	.LBB6:
 195              	.LBB5:
  36:src/MemoryAllocator.cpp **** 
 196              		.loc 1 36 14 is_stmt 1
  36:src/MemoryAllocator.cpp **** 
 197              		.loc 1 36 24 is_stmt 0
 198 010c 97060000 		sd	a4,.LANCHOR0,a3
 198      23B0E600 
 199 0114 6FF0DFFC 		j	.L12
 200              	.LVL14:
 201              	.L9:
 202              	.LBE5:
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 203              		.loc 1 43 9 is_stmt 1
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 204              		.loc 1 43 18 is_stmt 0
 205 0118 03B78700 		ld	a4,8(a5)
 206              	.LVL15:
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 207              		.loc 1 43 9
 208 011c 63060700 		beqz	a4,.L14
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 209              		.loc 1 43 24 is_stmt 1 discriminator 1
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 210              		.loc 1 43 47 is_stmt 0 discriminator 1
 211 0120 83B60701 		ld	a3,16(a5)
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 212              		.loc 1 43 40 discriminator 1
 213 0124 2338D700 		sd	a3,16(a4)
 214              	.L14:
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 215              		.loc 1 44 9 is_stmt 1
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 216              		.loc 1 44 18 is_stmt 0
 217 0128 03B70701 		ld	a4,16(a5)
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 218              		.loc 1 44 9
 219 012c 63080700 		beqz	a4,.L15
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
GAS LISTING /tmp/ccSLuS9q.s 			page 6


 220              		.loc 1 44 24 is_stmt 1 discriminator 1
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 221              		.loc 1 44 47 is_stmt 0 discriminator 1
 222 0130 83B68700 		ld	a3,8(a5)
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 223              		.loc 1 44 40 discriminator 1
 224 0134 2334D700 		sd	a3,8(a4)
 225 0138 6FF0DFFB 		j	.L13
 226              	.L15:
  45:src/MemoryAllocator.cpp ****     }
 227              		.loc 1 45 14 is_stmt 1
  45:src/MemoryAllocator.cpp ****     }
 228              		.loc 1 45 31 is_stmt 0
 229 013c 03B78700 		ld	a4,8(a5)
  45:src/MemoryAllocator.cpp ****     }
 230              		.loc 1 45 24
 231 0140 97060000 		sd	a4,.LANCHOR0,a3
 231      23B0E600 
 232 0148 6FF0DFFA 		j	.L13
 233              	.LVL16:
 234              	.L18:
 235              	.LBE6:
  27:src/MemoryAllocator.cpp **** 
 236              		.loc 1 27 22
 237 014c 13850700 		mv	a0,a5
 238              	.LVL17:
 239 0150 6FF01FFB 		j	.L3
 240              		.cfi_endproc
 241              	.LFE2:
 243              		.align	2
 244              		.globl	_ZN15MemoryAllocator9allocateBEm
 246              	_ZN15MemoryAllocator9allocateBEm:
 247              	.LFB1:
  15:src/MemoryAllocator.cpp ****     uint64 numOfBlocks = (size+sizeof(BlockHeader))/MEM_BLOCK_SIZE + ((size+sizeof(BlockHeader)) % 
 248              		.loc 1 15 47 is_stmt 1
 249              		.cfi_startproc
 250              	.LVL18:
 251 0154 130101FF 		addi	sp,sp,-16
 252              		.cfi_def_cfa_offset 16
 253 0158 23341100 		sd	ra,8(sp)
 254 015c 23308100 		sd	s0,0(sp)
 255              		.cfi_offset 1, -8
 256              		.cfi_offset 8, -16
 257 0160 13040101 		addi	s0,sp,16
 258              		.cfi_def_cfa 8, 0
  16:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 259              		.loc 1 16 5
  16:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 260              		.loc 1 16 31 is_stmt 0
 261 0164 13058501 		addi	a0,a0,24
 262              	.LVL19:
  16:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 263              		.loc 1 16 52
 264 0168 93576500 		srli	a5,a0,6
  16:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 265              		.loc 1 16 98
 266 016c 1375F503 		andi	a0,a0,63
GAS LISTING /tmp/ccSLuS9q.s 			page 7


 267              	.LVL20:
  16:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 268              		.loc 1 16 119
 269 0170 63040500 		beqz	a0,.L22
 270 0174 13051000 		li	a0,1
 271              	.L22:
 272              	.LVL21:
  17:src/MemoryAllocator.cpp **** }
 273              		.loc 1 17 5 is_stmt 1 discriminator 4
  17:src/MemoryAllocator.cpp **** }
 274              		.loc 1 17 20 is_stmt 0 discriminator 4
 275 0178 3385A700 		add	a0,a5,a0
 276              	.LVL22:
 277 017c 97000000 		call	_ZN15MemoryAllocator8allocateEm
 277      E7800000 
 278              	.LVL23:
  18:src/MemoryAllocator.cpp **** 
 279              		.loc 1 18 1 discriminator 4
 280 0184 83308100 		ld	ra,8(sp)
 281              		.cfi_restore 1
 282 0188 03340100 		ld	s0,0(sp)
 283              		.cfi_restore 8
 284              		.cfi_def_cfa 2, 16
 285 018c 13010101 		addi	sp,sp,16
 286              		.cfi_def_cfa_offset 0
 287 0190 67800000 		jr	ra
 288              		.cfi_endproc
 289              	.LFE1:
 291              		.align	2
 292              		.globl	_ZN15MemoryAllocator9joinUpperEP11BlockHeader
 294              	_ZN15MemoryAllocator9joinUpperEP11BlockHeader:
 295              	.LFB4:
  50:src/MemoryAllocator.cpp **** 
  51:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void* addr) {
  52:src/MemoryAllocator.cpp ****     if (addr == nullptr) return 0;
  53:src/MemoryAllocator.cpp ****     BlockHeader* newBlk = (BlockHeader*) ((char*)addr - sizeof(BlockHeader));
  54:src/MemoryAllocator.cpp **** 
  55:src/MemoryAllocator.cpp ****     if (fmem_head == nullptr){
  56:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
  57:src/MemoryAllocator.cpp ****         newBlk->next = newBlk->prev = nullptr;
  58:src/MemoryAllocator.cpp ****         return 0;
  59:src/MemoryAllocator.cpp ****     }
  60:src/MemoryAllocator.cpp ****     else if (newBlk < fmem_head) {
  61:src/MemoryAllocator.cpp ****         newBlk->next = fmem_head;
  62:src/MemoryAllocator.cpp ****         fmem_head->prev = newBlk;
  63:src/MemoryAllocator.cpp ****         newBlk->prev = nullptr;
  64:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
  65:src/MemoryAllocator.cpp ****     }
  66:src/MemoryAllocator.cpp ****     else {
  67:src/MemoryAllocator.cpp ****         BlockHeader* blk = fmem_head, *prev = nullptr;
  68:src/MemoryAllocator.cpp ****         for (; blk && blk < newBlk; prev = blk, blk = blk->next);
  69:src/MemoryAllocator.cpp **** 
  70:src/MemoryAllocator.cpp ****         newBlk->next = blk;
  71:src/MemoryAllocator.cpp ****         if (blk) blk->prev = newBlk;
  72:src/MemoryAllocator.cpp **** 
  73:src/MemoryAllocator.cpp ****         newBlk->prev = prev;
  74:src/MemoryAllocator.cpp ****         prev->next = newBlk;
GAS LISTING /tmp/ccSLuS9q.s 			page 8


  75:src/MemoryAllocator.cpp ****     }
  76:src/MemoryAllocator.cpp **** 
  77:src/MemoryAllocator.cpp ****     joinUpper(newBlk);
  78:src/MemoryAllocator.cpp ****     joinUpper(newBlk->prev);
  79:src/MemoryAllocator.cpp **** 
  80:src/MemoryAllocator.cpp ****     return 0;
  81:src/MemoryAllocator.cpp **** 
  82:src/MemoryAllocator.cpp **** }
  83:src/MemoryAllocator.cpp **** 
  84:src/MemoryAllocator.cpp **** void MemoryAllocator::joinUpper(BlockHeader * blk) {
 296              		.loc 1 84 52 is_stmt 1
 297              		.cfi_startproc
 298              	.LVL24:
 299 0194 130101FF 		addi	sp,sp,-16
 300              		.cfi_def_cfa_offset 16
 301 0198 23348100 		sd	s0,8(sp)
 302              		.cfi_offset 8, -8
 303 019c 13040101 		addi	s0,sp,16
 304              		.cfi_def_cfa 8, 0
  85:src/MemoryAllocator.cpp ****     if (!blk || !blk->next) return;
 305              		.loc 1 85 5
 306 01a0 630E0500 		beqz	a0,.L24
 307              		.loc 1 85 23 is_stmt 0 discriminator 2
 308 01a4 03378500 		ld	a4,8(a0)
 309              		.loc 1 85 14 discriminator 2
 310 01a8 630A0700 		beqz	a4,.L24
  86:src/MemoryAllocator.cpp **** 
  87:src/MemoryAllocator.cpp ****     if ((char*)blk + blk->size * MEM_BLOCK_SIZE == (char*)blk->next){
 311              		.loc 1 87 5 is_stmt 1
 312              	.LBB7:
 313              		.loc 1 87 27 is_stmt 0
 314 01ac 83370500 		ld	a5,0(a0)
 315              		.loc 1 87 32
 316 01b0 93976700 		slli	a5,a5,6
 317              		.loc 1 87 20
 318 01b4 B307F500 		add	a5,a0,a5
 319              		.loc 1 87 5
 320 01b8 6308F700 		beq	a4,a5,.L28
 321              	.L24:
 322              	.LBE7:
  88:src/MemoryAllocator.cpp ****         BlockHeader* x = blk->next;
  89:src/MemoryAllocator.cpp ****         blk->next = x->next;
  90:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
  91:src/MemoryAllocator.cpp ****         blk->size += x->size;
  92:src/MemoryAllocator.cpp ****     }
  93:src/MemoryAllocator.cpp **** }...
 323              		.loc 1 93 1
 324 01bc 03348100 		ld	s0,8(sp)
 325              		.cfi_remember_state
 326              		.cfi_restore 8
 327              		.cfi_def_cfa 2, 16
 328 01c0 13010101 		addi	sp,sp,16
 329              		.cfi_def_cfa_offset 0
 330 01c4 67800000 		jr	ra
 331              	.L28:
 332              		.cfi_restore_state
 333              	.LBB9:
GAS LISTING /tmp/ccSLuS9q.s 			page 9


 334              	.LBB8:
  88:src/MemoryAllocator.cpp ****         BlockHeader* x = blk->next;
 335              		.loc 1 88 9 is_stmt 1
 336              	.LVL25:
  89:src/MemoryAllocator.cpp ****         blk->next = x->next;
 337              		.loc 1 89 9
  89:src/MemoryAllocator.cpp ****         blk->next = x->next;
 338              		.loc 1 89 24 is_stmt 0
 339 01c8 83378700 		ld	a5,8(a4)
  89:src/MemoryAllocator.cpp ****         blk->next = x->next;
 340              		.loc 1 89 19
 341 01cc 2334F500 		sd	a5,8(a0)
  90:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 342              		.loc 1 90 9 is_stmt 1
 343 01d0 63840700 		beqz	a5,.L26
  90:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 344              		.loc 1 90 24 discriminator 1
  90:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 345              		.loc 1 90 40 is_stmt 0 discriminator 1
 346 01d4 23B8A700 		sd	a0,16(a5)
 347              	.L26:
  91:src/MemoryAllocator.cpp ****         blk->size += x->size;
 348              		.loc 1 91 9 is_stmt 1
  91:src/MemoryAllocator.cpp ****         blk->size += x->size;
 349              		.loc 1 91 25 is_stmt 0
 350 01d8 03370700 		ld	a4,0(a4)
 351              	.LVL26:
  91:src/MemoryAllocator.cpp ****         blk->size += x->size;
 352              		.loc 1 91 19
 353 01dc 83370500 		ld	a5,0(a0)
 354 01e0 B387E700 		add	a5,a5,a4
 355 01e4 2330F500 		sd	a5,0(a0)
 356              	.LBE8:
 357 01e8 6FF05FFD 		j	.L24
 358              	.LBE9:
 359              		.cfi_endproc
 360              	.LFE4:
 362              		.align	2
 363              		.globl	_ZN15MemoryAllocator4freeEPv
 365              	_ZN15MemoryAllocator4freeEPv:
 366              	.LFB3:
  51:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void* addr) {
 367              		.loc 1 51 39 is_stmt 1
 368              		.cfi_startproc
 369              	.LVL27:
  52:src/MemoryAllocator.cpp ****     if (addr == nullptr) return 0;
 370              		.loc 1 52 5
 371 01ec 630A050A 		beqz	a0,.L38
  51:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void* addr) {
 372              		.loc 1 51 39 is_stmt 0
 373 01f0 130101FE 		addi	sp,sp,-32
 374              		.cfi_def_cfa_offset 32
 375 01f4 233C1100 		sd	ra,24(sp)
 376 01f8 23388100 		sd	s0,16(sp)
 377 01fc 23349100 		sd	s1,8(sp)
 378              		.cfi_offset 1, -8
 379              		.cfi_offset 8, -16
GAS LISTING /tmp/ccSLuS9q.s 			page 10


 380              		.cfi_offset 9, -24
 381 0200 13040102 		addi	s0,sp,32
 382              		.cfi_def_cfa 8, 0
 383 0204 93040500 		mv	s1,a0
  53:src/MemoryAllocator.cpp ****     BlockHeader* newBlk = (BlockHeader*) ((char*)addr - sizeof(BlockHeader));
 384              		.loc 1 53 5 is_stmt 1
  53:src/MemoryAllocator.cpp ****     BlockHeader* newBlk = (BlockHeader*) ((char*)addr - sizeof(BlockHeader));
 385              		.loc 1 53 18 is_stmt 0
 386 0208 130585FE 		addi	a0,a0,-24
 387              	.LVL28:
  55:src/MemoryAllocator.cpp ****     if (fmem_head == nullptr){
 388              		.loc 1 55 5 is_stmt 1
 389              	.LBB10:
  55:src/MemoryAllocator.cpp ****     if (fmem_head == nullptr){
 390              		.loc 1 55 19 is_stmt 0
 391 020c 97070000 		ld	a5,.LANCHOR0
 391      83B70700 
  55:src/MemoryAllocator.cpp ****     if (fmem_head == nullptr){
 392              		.loc 1 55 5
 393 0214 63840704 		beqz	a5,.L41
 394              	.LBE10:
  60:src/MemoryAllocator.cpp ****     else if (newBlk < fmem_head) {
 395              		.loc 1 60 10 is_stmt 1
 396              	.LBB14:
 397              	.LBB11:
 398 0218 637CF504 		bleu	a5,a0,.L36
  61:src/MemoryAllocator.cpp ****         newBlk->next = fmem_head;
 399              		.loc 1 61 9
  61:src/MemoryAllocator.cpp ****         newBlk->next = fmem_head;
 400              		.loc 1 61 22 is_stmt 0
 401 021c 23B8F4FE 		sd	a5,-16(s1)
  62:src/MemoryAllocator.cpp ****         fmem_head->prev = newBlk;
 402              		.loc 1 62 9 is_stmt 1
  62:src/MemoryAllocator.cpp ****         fmem_head->prev = newBlk;
 403              		.loc 1 62 25 is_stmt 0
 404 0220 23B8A700 		sd	a0,16(a5)
  63:src/MemoryAllocator.cpp ****         newBlk->prev = nullptr;
 405              		.loc 1 63 9 is_stmt 1
  63:src/MemoryAllocator.cpp ****         newBlk->prev = nullptr;
 406              		.loc 1 63 22 is_stmt 0
 407 0224 23BC04FE 		sd	zero,-8(s1)
  64:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
 408              		.loc 1 64 9 is_stmt 1
  64:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
 409              		.loc 1 64 19 is_stmt 0
 410 0228 97070000 		sd	a0,.LANCHOR0,a5
 410      23B0A700 
 411              	.L33:
 412              	.LBE11:
 413              	.LBE14:
  77:src/MemoryAllocator.cpp ****     joinUpper(newBlk);
 414              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp ****     joinUpper(newBlk);
 415              		.loc 1 77 14 is_stmt 0
 416 0230 97000000 		call	_ZN15MemoryAllocator9joinUpperEP11BlockHeader
 416      E7800000 
 417              	.LVL29:
GAS LISTING /tmp/ccSLuS9q.s 			page 11


  78:src/MemoryAllocator.cpp ****     joinUpper(newBlk->prev);
 418              		.loc 1 78 5 is_stmt 1
  78:src/MemoryAllocator.cpp ****     joinUpper(newBlk->prev);
 419              		.loc 1 78 14 is_stmt 0
 420 0238 03B584FF 		ld	a0,-8(s1)
 421 023c 97000000 		call	_ZN15MemoryAllocator9joinUpperEP11BlockHeader
 421      E7800000 
 422              	.LVL30:
  80:src/MemoryAllocator.cpp ****     return 0;
 423              		.loc 1 80 5 is_stmt 1
 424              	.L30:
  82:src/MemoryAllocator.cpp **** }
 425              		.loc 1 82 1 is_stmt 0
 426 0244 13050000 		li	a0,0
 427 0248 83308101 		ld	ra,24(sp)
 428              		.cfi_remember_state
 429              		.cfi_restore 1
 430 024c 03340101 		ld	s0,16(sp)
 431              		.cfi_restore 8
 432              		.cfi_def_cfa 2, 32
 433 0250 83348100 		ld	s1,8(sp)
 434              		.cfi_restore 9
 435              	.LVL31:
 436 0254 13010102 		addi	sp,sp,32
 437              		.cfi_def_cfa_offset 0
 438 0258 67800000 		jr	ra
 439              	.LVL32:
 440              	.L41:
 441              		.cfi_restore_state
 442              	.LBB15:
  56:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
 443              		.loc 1 56 9 is_stmt 1
  56:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
 444              		.loc 1 56 19 is_stmt 0
 445 025c 97070000 		sd	a0,.LANCHOR0,a5
 445      23B0A700 
  57:src/MemoryAllocator.cpp ****         newBlk->next = newBlk->prev = nullptr;
 446              		.loc 1 57 9 is_stmt 1
  57:src/MemoryAllocator.cpp ****         newBlk->next = newBlk->prev = nullptr;
 447              		.loc 1 57 37 is_stmt 0
 448 0264 23BC04FE 		sd	zero,-8(s1)
  57:src/MemoryAllocator.cpp ****         newBlk->next = newBlk->prev = nullptr;
 449              		.loc 1 57 22
 450 0268 23B804FE 		sd	zero,-16(s1)
  58:src/MemoryAllocator.cpp ****         return 0;
 451              		.loc 1 58 9 is_stmt 1
  58:src/MemoryAllocator.cpp ****         return 0;
 452              		.loc 1 58 16 is_stmt 0
 453 026c 6FF09FFD 		j	.L30
 454              	.L36:
 455              	.LBB13:
 456              	.LBB12:
  67:src/MemoryAllocator.cpp ****         BlockHeader* blk = fmem_head, *prev = nullptr;
 457              		.loc 1 67 40
 458 0270 13070000 		li	a4,0
 459              	.L32:
 460              	.LVL33:
GAS LISTING /tmp/ccSLuS9q.s 			page 12


  68:src/MemoryAllocator.cpp ****         for (; blk && blk < newBlk; prev = blk, blk = blk->next);
 461              		.loc 1 68 9 is_stmt 1 discriminator 3
  68:src/MemoryAllocator.cpp ****         for (; blk && blk < newBlk; prev = blk, blk = blk->next);
 462              		.loc 1 68 20 discriminator 3
 463 0274 638A0700 		beqz	a5,.L34
  68:src/MemoryAllocator.cpp ****         for (; blk && blk < newBlk; prev = blk, blk = blk->next);
 464              		.loc 1 68 20 is_stmt 0 discriminator 1
 465 0278 63F8A700 		bgeu	a5,a0,.L34
  68:src/MemoryAllocator.cpp ****         for (; blk && blk < newBlk; prev = blk, blk = blk->next);
 466              		.loc 1 68 9 is_stmt 1 discriminator 2
 467              	.LVL34:
  68:src/MemoryAllocator.cpp ****         for (; blk && blk < newBlk; prev = blk, blk = blk->next);
 468              		.loc 1 68 42 is_stmt 0 discriminator 2
 469 027c 13870700 		mv	a4,a5
  68:src/MemoryAllocator.cpp ****         for (; blk && blk < newBlk; prev = blk, blk = blk->next);
 470              		.loc 1 68 53 discriminator 2
 471 0280 83B78700 		ld	a5,8(a5)
 472              	.LVL35:
  68:src/MemoryAllocator.cpp ****         for (; blk && blk < newBlk; prev = blk, blk = blk->next);
 473              		.loc 1 68 9 discriminator 2
 474 0284 6FF01FFF 		j	.L32
 475              	.L34:
  70:src/MemoryAllocator.cpp ****         newBlk->next = blk;
 476              		.loc 1 70 9 is_stmt 1
  70:src/MemoryAllocator.cpp ****         newBlk->next = blk;
 477              		.loc 1 70 22 is_stmt 0
 478 0288 23B8F4FE 		sd	a5,-16(s1)
  71:src/MemoryAllocator.cpp ****         if (blk) blk->prev = newBlk;
 479              		.loc 1 71 9 is_stmt 1
 480 028c 63840700 		beqz	a5,.L35
  71:src/MemoryAllocator.cpp ****         if (blk) blk->prev = newBlk;
 481              		.loc 1 71 18 discriminator 1
  71:src/MemoryAllocator.cpp ****         if (blk) blk->prev = newBlk;
 482              		.loc 1 71 28 is_stmt 0 discriminator 1
 483 0290 23B8A700 		sd	a0,16(a5)
 484              	.L35:
  73:src/MemoryAllocator.cpp ****         newBlk->prev = prev;
 485              		.loc 1 73 9 is_stmt 1
  73:src/MemoryAllocator.cpp ****         newBlk->prev = prev;
 486              		.loc 1 73 22 is_stmt 0
 487 0294 23BCE4FE 		sd	a4,-8(s1)
  74:src/MemoryAllocator.cpp ****         prev->next = newBlk;
 488              		.loc 1 74 9 is_stmt 1
  74:src/MemoryAllocator.cpp ****         prev->next = newBlk;
 489              		.loc 1 74 20 is_stmt 0
 490 0298 2334A700 		sd	a0,8(a4)
 491 029c 6FF05FF9 		j	.L33
 492              	.LVL36:
 493              	.L38:
 494              		.cfi_def_cfa_register 2
 495              		.cfi_restore 1
 496              		.cfi_restore 8
 497              		.cfi_restore 9
 498              	.LBE12:
 499              	.LBE13:
 500              	.LBE15:
  82:src/MemoryAllocator.cpp **** }
GAS LISTING /tmp/ccSLuS9q.s 			page 13


 501              		.loc 1 82 1
 502 02a0 13050000 		li	a0,0
 503              	.LVL37:
 504 02a4 67800000 		ret
 505              		.cfi_endproc
 506              	.LFE3:
 508              		.globl	_ZN15MemoryAllocator9fmem_headE
 509              		.bss
 510              		.align	3
 511              		.set	.LANCHOR0,. + 0
 514              	_ZN15MemoryAllocator9fmem_headE:
 515 0000 00000000 		.zero	8
 515      00000000 
 516              		.text
 517              	.Letext0:
 518              		.file 2 "src/../h/../lib/hw.h"
 519              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccSLuS9q.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccSLuS9q.s:9      .text:0000000000000000 _ZN15MemoryAllocator4initEv
     /tmp/ccSLuS9q.s:13     .text:0000000000000000 .L0 
     /tmp/ccSLuS9q.s:14     .text:0000000000000000 .L0 
     /tmp/ccSLuS9q.s:15     .text:0000000000000004 .L0 
     /tmp/ccSLuS9q.s:17     .text:0000000000000008 .L0 
     /tmp/ccSLuS9q.s:19     .text:000000000000000c .L0 
     /tmp/ccSLuS9q.s:21     .text:000000000000000c .L0 
     /tmp/ccSLuS9q.s:22     .text:000000000000000c .L0 
     /tmp/ccSLuS9q.s:27     .text:0000000000000024 .L0 
     /tmp/ccSLuS9q.s:28     .text:0000000000000024 .L0 
     /tmp/ccSLuS9q.s:31     .text:0000000000000030 .L0 
     /tmp/ccSLuS9q.s:33     .text:0000000000000034 .L0 
     /tmp/ccSLuS9q.s:35     .text:0000000000000038 .L0 
     /tmp/ccSLuS9q.s:37     .text:000000000000003c .L0 
     /tmp/ccSLuS9q.s:38     .text:000000000000003c .L0 
     /tmp/ccSLuS9q.s:40     .text:0000000000000040 .L0 
     /tmp/ccSLuS9q.s:42     .text:0000000000000044 .L0 
     /tmp/ccSLuS9q.s:44     .text:0000000000000048 .L0 
     /tmp/ccSLuS9q.s:45     .text:000000000000004c .L0 
     /tmp/ccSLuS9q.s:46     .text:000000000000004c .L0 
     /tmp/ccSLuS9q.s:48     .text:0000000000000050 .L0 
     /tmp/ccSLuS9q.s:50     .text:0000000000000054 .L0 
     /tmp/ccSLuS9q.s:56     .text:0000000000000054 _ZN15MemoryAllocator8allocateEm
     /tmp/ccSLuS9q.s:59     .text:0000000000000054 .L0 
     /tmp/ccSLuS9q.s:61     .text:0000000000000054 .L0 
     /tmp/ccSLuS9q.s:62     .text:0000000000000058 .L0 
     /tmp/ccSLuS9q.s:64     .text:000000000000005c .L0 
     /tmp/ccSLuS9q.s:66     .text:0000000000000060 .L0 
     /tmp/ccSLuS9q.s:69     .text:0000000000000064 .L0 
     /tmp/ccSLuS9q.s:70     .text:0000000000000064 .L0 
     /tmp/ccSLuS9q.s:73     .text:000000000000006c .L0 
     /tmp/ccSLuS9q.s:75     .text:0000000000000070 .L0 
     /tmp/ccSLuS9q.s:81     .text:0000000000000078 .L0 
     /tmp/ccSLuS9q.s:83     .text:000000000000007c .L0 
     /tmp/ccSLuS9q.s:85     .text:0000000000000080 .L0 
     /tmp/ccSLuS9q.s:89     .text:0000000000000084 .L0 
     /tmp/ccSLuS9q.s:90     .text:0000000000000084 .L0 
     /tmp/ccSLuS9q.s:94     .text:0000000000000088 .L0 
     /tmp/ccSLuS9q.s:96     .text:000000000000008c .L0 
     /tmp/ccSLuS9q.s:99     .text:0000000000000090 .L0 
     /tmp/ccSLuS9q.s:101    .text:0000000000000094 .L0 
     /tmp/ccSLuS9q.s:103    .text:0000000000000098 .L0 
     /tmp/ccSLuS9q.s:105    .text:000000000000009c .L0 
     /tmp/ccSLuS9q.s:107    .text:00000000000000a0 .L0 
     /tmp/ccSLuS9q.s:109    .text:00000000000000a4 .L0 
     /tmp/ccSLuS9q.s:116    .text:00000000000000ac .L0 
     /tmp/ccSLuS9q.s:118    .text:00000000000000b0 .L0 
     /tmp/ccSLuS9q.s:119    .text:00000000000000b0 .L0 
     /tmp/ccSLuS9q.s:121    .text:00000000000000b4 .L0 
     /tmp/ccSLuS9q.s:125    .text:00000000000000b8 .L0 
     /tmp/ccSLuS9q.s:128    .text:00000000000000bc .L0 
     /tmp/ccSLuS9q.s:129    .text:00000000000000bc .L0 
     /tmp/ccSLuS9q.s:131    .text:00000000000000c0 .L0 
     /tmp/ccSLuS9q.s:132    .text:00000000000000c0 .L0 
     /tmp/ccSLuS9q.s:135    .text:00000000000000c4 .L0 
GAS LISTING /tmp/ccSLuS9q.s 			page 15


     /tmp/ccSLuS9q.s:138    .text:00000000000000c8 .L0 
     /tmp/ccSLuS9q.s:139    .text:00000000000000c8 .L0 
     /tmp/ccSLuS9q.s:141    .text:00000000000000cc .L0 
     /tmp/ccSLuS9q.s:143    .text:00000000000000d0 .L0 
     /tmp/ccSLuS9q.s:144    .text:00000000000000d0 .L0 
     /tmp/ccSLuS9q.s:148    .text:00000000000000d4 .L0 
     /tmp/ccSLuS9q.s:149    .text:00000000000000d4 .L0 
     /tmp/ccSLuS9q.s:151    .text:00000000000000d8 .L0 
     /tmp/ccSLuS9q.s:153    .text:00000000000000dc .L0 
     /tmp/ccSLuS9q.s:154    .text:00000000000000dc .L0 
     /tmp/ccSLuS9q.s:157    .text:00000000000000e0 .L0 
     /tmp/ccSLuS9q.s:158    .text:00000000000000e0 .L0 
     /tmp/ccSLuS9q.s:160    .text:00000000000000e4 .L0 
     /tmp/ccSLuS9q.s:162    .text:00000000000000e8 .L0 
     /tmp/ccSLuS9q.s:163    .text:00000000000000e8 .L0 
     /tmp/ccSLuS9q.s:165    .text:00000000000000ec .L0 
     /tmp/ccSLuS9q.s:167    .text:00000000000000f0 .L0 
     /tmp/ccSLuS9q.s:168    .text:00000000000000f0 .L0 
     /tmp/ccSLuS9q.s:174    .text:00000000000000f4 .L0 
     /tmp/ccSLuS9q.s:175    .text:00000000000000f4 .L0 
     /tmp/ccSLuS9q.s:177    .text:00000000000000f8 .L0 
     /tmp/ccSLuS9q.s:179    .text:00000000000000fc .L0 
     /tmp/ccSLuS9q.s:180    .text:00000000000000fc .L0 
     /tmp/ccSLuS9q.s:184    .text:0000000000000100 .L0 
     /tmp/ccSLuS9q.s:185    .text:0000000000000104 .L0 
     /tmp/ccSLuS9q.s:186    .text:0000000000000104 .L0 
     /tmp/ccSLuS9q.s:187    .text:0000000000000104 .L0 
     /tmp/ccSLuS9q.s:189    .text:0000000000000108 .L0 
     /tmp/ccSLuS9q.s:193    .text:000000000000010c .L0 
     /tmp/ccSLuS9q.s:197    .text:000000000000010c .L0 
     /tmp/ccSLuS9q.s:198    .text:000000000000010c .L0 
     /tmp/ccSLuS9q.s:204    .text:0000000000000118 .L0 
     /tmp/ccSLuS9q.s:205    .text:0000000000000118 .L0 
     /tmp/ccSLuS9q.s:208    .text:000000000000011c .L0 
     /tmp/ccSLuS9q.s:210    .text:0000000000000120 .L0 
     /tmp/ccSLuS9q.s:211    .text:0000000000000120 .L0 
     /tmp/ccSLuS9q.s:213    .text:0000000000000124 .L0 
     /tmp/ccSLuS9q.s:216    .text:0000000000000128 .L0 
     /tmp/ccSLuS9q.s:217    .text:0000000000000128 .L0 
     /tmp/ccSLuS9q.s:219    .text:000000000000012c .L0 
     /tmp/ccSLuS9q.s:221    .text:0000000000000130 .L0 
     /tmp/ccSLuS9q.s:222    .text:0000000000000130 .L0 
     /tmp/ccSLuS9q.s:224    .text:0000000000000134 .L0 
     /tmp/ccSLuS9q.s:228    .text:000000000000013c .L0 
     /tmp/ccSLuS9q.s:229    .text:000000000000013c .L0 
     /tmp/ccSLuS9q.s:231    .text:0000000000000140 .L0 
     /tmp/ccSLuS9q.s:237    .text:000000000000014c .L0 
     /tmp/ccSLuS9q.s:240    .text:0000000000000154 .L0 
     /tmp/ccSLuS9q.s:246    .text:0000000000000154 _ZN15MemoryAllocator9allocateBEm
     /tmp/ccSLuS9q.s:249    .text:0000000000000154 .L0 
     /tmp/ccSLuS9q.s:251    .text:0000000000000154 .L0 
     /tmp/ccSLuS9q.s:252    .text:0000000000000158 .L0 
     /tmp/ccSLuS9q.s:255    .text:0000000000000160 .L0 
     /tmp/ccSLuS9q.s:256    .text:0000000000000160 .L0 
     /tmp/ccSLuS9q.s:258    .text:0000000000000164 .L0 
     /tmp/ccSLuS9q.s:260    .text:0000000000000164 .L0 
     /tmp/ccSLuS9q.s:261    .text:0000000000000164 .L0 
GAS LISTING /tmp/ccSLuS9q.s 			page 16


     /tmp/ccSLuS9q.s:264    .text:0000000000000168 .L0 
     /tmp/ccSLuS9q.s:266    .text:000000000000016c .L0 
     /tmp/ccSLuS9q.s:269    .text:0000000000000170 .L0 
     /tmp/ccSLuS9q.s:274    .text:0000000000000178 .L0 
     /tmp/ccSLuS9q.s:275    .text:0000000000000178 .L0 
     /tmp/ccSLuS9q.s:280    .text:0000000000000184 .L0 
     /tmp/ccSLuS9q.s:281    .text:0000000000000188 .L0 
     /tmp/ccSLuS9q.s:283    .text:000000000000018c .L0 
     /tmp/ccSLuS9q.s:284    .text:000000000000018c .L0 
     /tmp/ccSLuS9q.s:286    .text:0000000000000190 .L0 
     /tmp/ccSLuS9q.s:288    .text:0000000000000194 .L0 
     /tmp/ccSLuS9q.s:294    .text:0000000000000194 _ZN15MemoryAllocator9joinUpperEP11BlockHeader
     /tmp/ccSLuS9q.s:297    .text:0000000000000194 .L0 
     /tmp/ccSLuS9q.s:299    .text:0000000000000194 .L0 
     /tmp/ccSLuS9q.s:300    .text:0000000000000198 .L0 
     /tmp/ccSLuS9q.s:302    .text:000000000000019c .L0 
     /tmp/ccSLuS9q.s:304    .text:00000000000001a0 .L0 
     /tmp/ccSLuS9q.s:306    .text:00000000000001a0 .L0 
     /tmp/ccSLuS9q.s:308    .text:00000000000001a4 .L0 
     /tmp/ccSLuS9q.s:310    .text:00000000000001a8 .L0 
     /tmp/ccSLuS9q.s:313    .text:00000000000001ac .L0 
     /tmp/ccSLuS9q.s:314    .text:00000000000001ac .L0 
     /tmp/ccSLuS9q.s:316    .text:00000000000001b0 .L0 
     /tmp/ccSLuS9q.s:318    .text:00000000000001b4 .L0 
     /tmp/ccSLuS9q.s:320    .text:00000000000001b8 .L0 
     /tmp/ccSLuS9q.s:324    .text:00000000000001bc .L0 
     /tmp/ccSLuS9q.s:325    .text:00000000000001c0 .L0 
     /tmp/ccSLuS9q.s:326    .text:00000000000001c0 .L0 
     /tmp/ccSLuS9q.s:327    .text:00000000000001c0 .L0 
     /tmp/ccSLuS9q.s:329    .text:00000000000001c4 .L0 
     /tmp/ccSLuS9q.s:332    .text:00000000000001c8 .L0 
     /tmp/ccSLuS9q.s:337    .text:00000000000001c8 .L0 
     /tmp/ccSLuS9q.s:338    .text:00000000000001c8 .L0 
     /tmp/ccSLuS9q.s:339    .text:00000000000001c8 .L0 
     /tmp/ccSLuS9q.s:341    .text:00000000000001cc .L0 
     /tmp/ccSLuS9q.s:343    .text:00000000000001d0 .L0 
     /tmp/ccSLuS9q.s:345    .text:00000000000001d4 .L0 
     /tmp/ccSLuS9q.s:346    .text:00000000000001d4 .L0 
     /tmp/ccSLuS9q.s:349    .text:00000000000001d8 .L0 
     /tmp/ccSLuS9q.s:350    .text:00000000000001d8 .L0 
     /tmp/ccSLuS9q.s:353    .text:00000000000001dc .L0 
     /tmp/ccSLuS9q.s:359    .text:00000000000001ec .L0 
     /tmp/ccSLuS9q.s:365    .text:00000000000001ec _ZN15MemoryAllocator4freeEPv
     /tmp/ccSLuS9q.s:368    .text:00000000000001ec .L0 
     /tmp/ccSLuS9q.s:370    .text:00000000000001ec .L0 
     /tmp/ccSLuS9q.s:371    .text:00000000000001ec .L0 
     /tmp/ccSLuS9q.s:373    .text:00000000000001f0 .L0 
     /tmp/ccSLuS9q.s:374    .text:00000000000001f4 .L0 
     /tmp/ccSLuS9q.s:378    .text:0000000000000200 .L0 
     /tmp/ccSLuS9q.s:379    .text:0000000000000200 .L0 
     /tmp/ccSLuS9q.s:380    .text:0000000000000200 .L0 
     /tmp/ccSLuS9q.s:382    .text:0000000000000204 .L0 
     /tmp/ccSLuS9q.s:385    .text:0000000000000208 .L0 
     /tmp/ccSLuS9q.s:386    .text:0000000000000208 .L0 
     /tmp/ccSLuS9q.s:390    .text:000000000000020c .L0 
     /tmp/ccSLuS9q.s:391    .text:000000000000020c .L0 
     /tmp/ccSLuS9q.s:393    .text:0000000000000214 .L0 
GAS LISTING /tmp/ccSLuS9q.s 			page 17


     /tmp/ccSLuS9q.s:398    .text:0000000000000218 .L0 
     /tmp/ccSLuS9q.s:400    .text:000000000000021c .L0 
     /tmp/ccSLuS9q.s:401    .text:000000000000021c .L0 
     /tmp/ccSLuS9q.s:403    .text:0000000000000220 .L0 
     /tmp/ccSLuS9q.s:404    .text:0000000000000220 .L0 
     /tmp/ccSLuS9q.s:406    .text:0000000000000224 .L0 
     /tmp/ccSLuS9q.s:407    .text:0000000000000224 .L0 
     /tmp/ccSLuS9q.s:409    .text:0000000000000228 .L0 
     /tmp/ccSLuS9q.s:410    .text:0000000000000228 .L0 
     /tmp/ccSLuS9q.s:415    .text:0000000000000230 .L0 
     /tmp/ccSLuS9q.s:416    .text:0000000000000230 .L0 
     /tmp/ccSLuS9q.s:419    .text:0000000000000238 .L0 
     /tmp/ccSLuS9q.s:420    .text:0000000000000238 .L0 
     /tmp/ccSLuS9q.s:425    .text:0000000000000244 .L0 
     /tmp/ccSLuS9q.s:426    .text:0000000000000244 .L0 
     /tmp/ccSLuS9q.s:428    .text:000000000000024c .L0 
     /tmp/ccSLuS9q.s:429    .text:000000000000024c .L0 
     /tmp/ccSLuS9q.s:431    .text:0000000000000250 .L0 
     /tmp/ccSLuS9q.s:432    .text:0000000000000250 .L0 
     /tmp/ccSLuS9q.s:434    .text:0000000000000254 .L0 
     /tmp/ccSLuS9q.s:437    .text:0000000000000258 .L0 
     /tmp/ccSLuS9q.s:441    .text:000000000000025c .L0 
     /tmp/ccSLuS9q.s:444    .text:000000000000025c .L0 
     /tmp/ccSLuS9q.s:445    .text:000000000000025c .L0 
     /tmp/ccSLuS9q.s:447    .text:0000000000000264 .L0 
     /tmp/ccSLuS9q.s:448    .text:0000000000000264 .L0 
     /tmp/ccSLuS9q.s:450    .text:0000000000000268 .L0 
     /tmp/ccSLuS9q.s:452    .text:000000000000026c .L0 
     /tmp/ccSLuS9q.s:453    .text:000000000000026c .L0 
     /tmp/ccSLuS9q.s:458    .text:0000000000000270 .L0 
     /tmp/ccSLuS9q.s:462    .text:0000000000000274 .L0 
     /tmp/ccSLuS9q.s:463    .text:0000000000000274 .L0 
     /tmp/ccSLuS9q.s:465    .text:0000000000000278 .L0 
     /tmp/ccSLuS9q.s:468    .text:000000000000027c .L0 
     /tmp/ccSLuS9q.s:469    .text:000000000000027c .L0 
     /tmp/ccSLuS9q.s:471    .text:0000000000000280 .L0 
     /tmp/ccSLuS9q.s:474    .text:0000000000000284 .L0 
     /tmp/ccSLuS9q.s:477    .text:0000000000000288 .L0 
     /tmp/ccSLuS9q.s:478    .text:0000000000000288 .L0 
     /tmp/ccSLuS9q.s:480    .text:000000000000028c .L0 
     /tmp/ccSLuS9q.s:482    .text:0000000000000290 .L0 
     /tmp/ccSLuS9q.s:483    .text:0000000000000290 .L0 
     /tmp/ccSLuS9q.s:486    .text:0000000000000294 .L0 
     /tmp/ccSLuS9q.s:487    .text:0000000000000294 .L0 
     /tmp/ccSLuS9q.s:489    .text:0000000000000298 .L0 
     /tmp/ccSLuS9q.s:490    .text:0000000000000298 .L0 
     /tmp/ccSLuS9q.s:494    .text:00000000000002a0 .L0 
     /tmp/ccSLuS9q.s:495    .text:00000000000002a0 .L0 
     /tmp/ccSLuS9q.s:496    .text:00000000000002a0 .L0 
     /tmp/ccSLuS9q.s:497    .text:00000000000002a0 .L0 
     /tmp/ccSLuS9q.s:502    .text:00000000000002a0 .L0 
     /tmp/ccSLuS9q.s:505    .text:00000000000002a8 .L0 
     /tmp/ccSLuS9q.s:514    .bss:0000000000000000 _ZN15MemoryAllocator9fmem_headE
     /tmp/ccSLuS9q.s:511    .bss:0000000000000000 .LANCHOR0
     /tmp/ccSLuS9q.s:520    .text:00000000000002a8 .L0 
     /tmp/ccSLuS9q.s:22     .text:000000000000000c .L0 
     /tmp/ccSLuS9q.s:24     .text:0000000000000018 .L0 
GAS LISTING /tmp/ccSLuS9q.s 			page 18


     /tmp/ccSLuS9q.s:28     .text:0000000000000024 .L0 
     /tmp/ccSLuS9q.s:70     .text:0000000000000064 .L0 
     /tmp/ccSLuS9q.s:198    .text:000000000000010c .L0 
     /tmp/ccSLuS9q.s:231    .text:0000000000000140 .L0 
     /tmp/ccSLuS9q.s:391    .text:000000000000020c .L0 
     /tmp/ccSLuS9q.s:410    .text:0000000000000228 .L0 
     /tmp/ccSLuS9q.s:445    .text:000000000000025c .L0 
     /tmp/ccSLuS9q.s:182    .text:0000000000000100 .L3
     /tmp/ccSLuS9q.s:92     .text:0000000000000088 .L8
     /tmp/ccSLuS9q.s:97     .text:0000000000000090 .L6
     /tmp/ccSLuS9q.s:113    .text:00000000000000ac .L5
     /tmp/ccSLuS9q.s:78     .text:0000000000000078 .L20
     /tmp/ccSLuS9q.s:87     .text:0000000000000084 .L7
     /tmp/ccSLuS9q.s:234    .text:000000000000014c .L18
     /tmp/ccSLuS9q.s:201    .text:0000000000000118 .L9
     /tmp/ccSLuS9q.s:146    .text:00000000000000d4 .L10
     /tmp/ccSLuS9q.s:192    .text:000000000000010c .L11
     /tmp/ccSLuS9q.s:155    .text:00000000000000e0 .L12
     /tmp/ccSLuS9q.s:214    .text:0000000000000128 .L14
     /tmp/ccSLuS9q.s:226    .text:000000000000013c .L15
     /tmp/ccSLuS9q.s:170    .text:00000000000000f4 .L13
     /tmp/ccSLuS9q.s:271    .text:0000000000000178 .L22
     /tmp/ccSLuS9q.s:321    .text:00000000000001bc .L24
     /tmp/ccSLuS9q.s:331    .text:00000000000001c8 .L28
     /tmp/ccSLuS9q.s:347    .text:00000000000001d8 .L26
     /tmp/ccSLuS9q.s:493    .text:00000000000002a0 .L38
     /tmp/ccSLuS9q.s:440    .text:000000000000025c .L41
     /tmp/ccSLuS9q.s:454    .text:0000000000000270 .L36
     /tmp/ccSLuS9q.s:424    .text:0000000000000244 .L30
     /tmp/ccSLuS9q.s:475    .text:0000000000000288 .L34
     /tmp/ccSLuS9q.s:459    .text:0000000000000274 .L32
     /tmp/ccSLuS9q.s:484    .text:0000000000000294 .L35
     /tmp/ccSLuS9q.s:411    .text:0000000000000230 .L33
     /tmp/ccSLuS9q.s:945    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccSLuS9q.s:1744   .debug_str:000000000000017b .LASF33
     /tmp/ccSLuS9q.s:1762   .debug_str:00000000000002f2 .LASF34
     /tmp/ccSLuS9q.s:1746   .debug_str:000000000000023f .LASF35
     /tmp/ccSLuS9q.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccSLuS9q.s:517    .text:00000000000002a8 .Letext0
     /tmp/ccSLuS9q.s:1694   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccSLuS9q.s:1754   .debug_str:00000000000002a3 .LASF0
     /tmp/ccSLuS9q.s:1736   .debug_str:0000000000000138 .LASF1
     /tmp/ccSLuS9q.s:1728   .debug_str:00000000000000e0 .LASF2
     /tmp/ccSLuS9q.s:1712   .debug_str:000000000000006c .LASF4
     /tmp/ccSLuS9q.s:1732   .debug_str:000000000000011c .LASF3
     /tmp/ccSLuS9q.s:1700   .debug_str:0000000000000023 .LASF5
     /tmp/ccSLuS9q.s:1696   .debug_str:0000000000000000 .LASF6
     /tmp/ccSLuS9q.s:1720   .debug_str:0000000000000093 .LASF7
     /tmp/ccSLuS9q.s:1756   .debug_str:00000000000002b0 .LASF8
     /tmp/ccSLuS9q.s:1708   .debug_str:0000000000000054 .LASF9
     /tmp/ccSLuS9q.s:1780   .debug_str:0000000000000363 .LASF10
     /tmp/ccSLuS9q.s:1724   .debug_str:00000000000000b0 .LASF11
     /tmp/ccSLuS9q.s:1772   .debug_str:0000000000000334 .LASF12
     /tmp/ccSLuS9q.s:1764   .debug_str:000000000000030a .LASF13
     /tmp/ccSLuS9q.s:1738   .debug_str:000000000000014b .LASF14
     /tmp/ccSLuS9q.s:1716   .debug_str:0000000000000078 .LASF15
     /tmp/ccSLuS9q.s:1758   .debug_str:00000000000002c0 .LASF16
GAS LISTING /tmp/ccSLuS9q.s 			page 19


     /tmp/ccSLuS9q.s:1752   .debug_str:0000000000000297 .LASF36
     /tmp/ccSLuS9q.s:1776   .debug_str:0000000000000359 .LASF17
     /tmp/ccSLuS9q.s:1702   .debug_str:000000000000002a .LASF18
     /tmp/ccSLuS9q.s:1778   .debug_str:000000000000035e .LASF19
     /tmp/ccSLuS9q.s:1698   .debug_str:0000000000000013 .LASF20
     /tmp/ccSLuS9q.s:1722   .debug_str:00000000000000a6 .LASF37
     /tmp/ccSLuS9q.s:1748   .debug_str:000000000000025e .LASF22
     /tmp/ccSLuS9q.s:1714   .debug_str:0000000000000073 .LASF38
     /tmp/ccSLuS9q.s:1760   .debug_str:00000000000002d6 .LASF39
     /tmp/ccSLuS9q.s:1768   .debug_str:000000000000031f .LASF21
     /tmp/ccSLuS9q.s:1706   .debug_str:0000000000000034 .LASF23
     /tmp/ccSLuS9q.s:1710   .debug_str:0000000000000062 .LASF24
     /tmp/ccSLuS9q.s:1726   .debug_str:00000000000000bf .LASF25
     /tmp/ccSLuS9q.s:1766   .debug_str:000000000000031a .LASF26
     /tmp/ccSLuS9q.s:1740   .debug_str:0000000000000157 .LASF27
     /tmp/ccSLuS9q.s:1734   .debug_str:000000000000012e .LASF40
     /tmp/ccSLuS9q.s:1730   .debug_str:00000000000000ee .LASF41
     /tmp/ccSLuS9q.s:1750   .debug_str:0000000000000277 .LASF42
     /tmp/ccSLuS9q.s:295    .text:0000000000000194 .LFB4
     /tmp/ccSLuS9q.s:360    .text:00000000000001ec .LFE4
     /tmp/ccSLuS9q.s:334    .text:00000000000001c8 .LBB8
     /tmp/ccSLuS9q.s:356    .text:00000000000001e8 .LBE8
     /tmp/ccSLuS9q.s:1454   .debug_loc:0000000000000000 .LLST7
     /tmp/ccSLuS9q.s:366    .text:00000000000001ec .LFB3
     /tmp/ccSLuS9q.s:506    .text:00000000000002a8 .LFE3
     /tmp/ccSLuS9q.s:1718   .debug_str:000000000000008e .LASF28
     /tmp/ccSLuS9q.s:1461   .debug_loc:0000000000000023 .LLST8
     /tmp/ccSLuS9q.s:1742   .debug_str:0000000000000174 .LASF29
     /tmp/ccSLuS9q.s:1494   .debug_loc:00000000000000ab .LLST9
     /tmp/ccSLuS9q.s:456    .text:0000000000000270 .LBB12
     /tmp/ccSLuS9q.s:498    .text:00000000000002a0 .LBE12
     /tmp/ccSLuS9q.s:1520   .debug_loc:000000000000010e .LLST10
     /tmp/ccSLuS9q.s:1536   .debug_loc:0000000000000158 .LLST11
     /tmp/ccSLuS9q.s:417    .text:0000000000000238 .LVL29
     /tmp/ccSLuS9q.s:422    .text:0000000000000244 .LVL30
     /tmp/ccSLuS9q.s:57     .text:0000000000000054 .LFB2
     /tmp/ccSLuS9q.s:241    .text:0000000000000154 .LFE2
     /tmp/ccSLuS9q.s:1770   .debug_str:0000000000000328 .LASF30
     /tmp/ccSLuS9q.s:1551   .debug_loc:00000000000001a1 .LLST0
     /tmp/ccSLuS9q.s:1589   .debug_loc:000000000000023d .LLST1
     /tmp/ccSLuS9q.s:1774   .debug_str:0000000000000344 .LASF31
     /tmp/ccSLuS9q.s:1604   .debug_loc:0000000000000286 .LLST2
     /tmp/ccSLuS9q.s:79     .text:0000000000000078 .LBB2
     /tmp/ccSLuS9q.s:114    .text:00000000000000ac .LBE2
     /tmp/ccSLuS9q.s:1704   .debug_str:000000000000002f .LASF32
     /tmp/ccSLuS9q.s:1615   .debug_loc:00000000000002bc .LLST3
     /tmp/ccSLuS9q.s:1686   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccSLuS9q.s:1626   .debug_loc:00000000000002f2 .LLST4
     /tmp/ccSLuS9q.s:247    .text:0000000000000154 .LFB1
     /tmp/ccSLuS9q.s:289    .text:0000000000000194 .LFE1
     /tmp/ccSLuS9q.s:1637   .debug_loc:0000000000000328 .LLST5
     /tmp/ccSLuS9q.s:1657   .debug_loc:0000000000000376 .LLST6
     /tmp/ccSLuS9q.s:278    .text:0000000000000184 .LVL23
     /tmp/ccSLuS9q.s:10     .text:0000000000000000 .LFB0
     /tmp/ccSLuS9q.s:51     .text:0000000000000054 .LFE0
     /tmp/ccSLuS9q.s:336    .text:00000000000001c8 .LVL25
     /tmp/ccSLuS9q.s:351    .text:00000000000001dc .LVL26
GAS LISTING /tmp/ccSLuS9q.s 			page 20


     /tmp/ccSLuS9q.s:369    .text:00000000000001ec .LVL27
     /tmp/ccSLuS9q.s:387    .text:000000000000020c .LVL28
     /tmp/ccSLuS9q.s:435    .text:0000000000000254 .LVL31
     /tmp/ccSLuS9q.s:439    .text:000000000000025c .LVL32
     /tmp/ccSLuS9q.s:492    .text:00000000000002a0 .LVL36
     /tmp/ccSLuS9q.s:503    .text:00000000000002a4 .LVL37
     /tmp/ccSLuS9q.s:460    .text:0000000000000274 .LVL33
     /tmp/ccSLuS9q.s:467    .text:000000000000027c .LVL34
     /tmp/ccSLuS9q.s:472    .text:0000000000000284 .LVL35
     /tmp/ccSLuS9q.s:60     .text:0000000000000054 .LVL0
     /tmp/ccSLuS9q.s:71     .text:000000000000006c .LVL1
     /tmp/ccSLuS9q.s:133    .text:00000000000000c4 .LVL8
     /tmp/ccSLuS9q.s:145    .text:00000000000000d4 .LVL10
     /tmp/ccSLuS9q.s:200    .text:0000000000000118 .LVL14
     /tmp/ccSLuS9q.s:206    .text:000000000000011c .LVL15
     /tmp/ccSLuS9q.s:233    .text:000000000000014c .LVL16
     /tmp/ccSLuS9q.s:77     .text:0000000000000078 .LVL2
     /tmp/ccSLuS9q.s:110    .text:00000000000000a8 .LVL5
     /tmp/ccSLuS9q.s:112    .text:00000000000000ac .LVL6
     /tmp/ccSLuS9q.s:181    .text:0000000000000100 .LVL12
     /tmp/ccSLuS9q.s:191    .text:000000000000010c .LVL13
     /tmp/ccSLuS9q.s:122    .text:00000000000000b8 .LVL7
     /tmp/ccSLuS9q.s:238    .text:0000000000000150 .LVL17
     /tmp/ccSLuS9q.s:136    .text:00000000000000c8 .LVL9
     /tmp/ccSLuS9q.s:169    .text:00000000000000f4 .LVL11
     /tmp/ccSLuS9q.s:250    .text:0000000000000154 .LVL18
     /tmp/ccSLuS9q.s:262    .text:0000000000000168 .LVL19
     /tmp/ccSLuS9q.s:267    .text:0000000000000170 .LVL20
     /tmp/ccSLuS9q.s:272    .text:0000000000000178 .LVL21
     /tmp/ccSLuS9q.s:276    .text:000000000000017c .LVL22
     /tmp/ccSLuS9q.s:521    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccSLuS9q.s:126    .text:00000000000000bc .LBB4
     /tmp/ccSLuS9q.s:171    .text:00000000000000f4 .LBE4
     /tmp/ccSLuS9q.s:195    .text:000000000000010c .LBB5
     /tmp/ccSLuS9q.s:202    .text:0000000000000118 .LBE5

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
