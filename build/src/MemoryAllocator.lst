GAS LISTING /tmp/ccnWWnMI.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator8allocateEm
   9              	_ZN15MemoryAllocator8allocateEm:
  10              	.LFB1:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 4/23/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** BlockHeader* MemoryAllocator::fmem_head = nullptr;
   8:src/MemoryAllocator.cpp **** bool MemoryAllocator::flag = false;
   9:src/MemoryAllocator.cpp **** 
  10:src/MemoryAllocator.cpp **** 
  11:src/MemoryAllocator.cpp **** void *MemoryAllocator::allocateB(size_t size) {
  12:src/MemoryAllocator.cpp ****     uint64 numOfBlocks = (size+sizeof(BlockHeader))/MEM_BLOCK_SIZE + ((size+sizeof(BlockHeader)) % 
  13:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
  14:src/MemoryAllocator.cpp **** }
  15:src/MemoryAllocator.cpp **** 
  16:src/MemoryAllocator.cpp **** void* MemoryAllocator::allocate(size_t numOfBlocks) {
  12              		.loc 1 16 53
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21 000c 93070500 		mv	a5,a0
  17:src/MemoryAllocator.cpp ****     if (!flag){
  22              		.loc 1 17 5
  23              		.loc 1 17 9 is_stmt 0
  24 0010 17070000 		lbu	a4,.LANCHOR0
  24      03470700 
  25              		.loc 1 17 5
  26 0018 63140704 		bnez	a4,.L2
  18:src/MemoryAllocator.cpp ****         fmem_head = (BlockHeader*) HEAP_START_ADDR;
  27              		.loc 1 18 9 is_stmt 1
  28              		.loc 1 18 19 is_stmt 0
  29 001c 17070000 		la	a4,HEAP_START_ADDR
  29      03370700 
  30 0024 03360700 		ld	a2,0(a4)
  31 0028 97060000 		lla	a3,.LANCHOR0
  31      93860600 
  32 0030 23B4C600 		sd	a2,8(a3)
  19:src/MemoryAllocator.cpp ****         fmem_head->size = ((char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR) / MEM_BLOCK_SIZE;
  33              		.loc 1 19 9 is_stmt 1
  34              		.loc 1 19 28 is_stmt 0
  35 0034 17070000 		la	a4,HEAP_END_ADDR
  35      03370700 
GAS LISTING /tmp/ccnWWnMI.s 			page 2


  36 003c 03370700 		ld	a4,0(a4)
  37              		.loc 1 19 49
  38 0040 3307C740 		sub	a4,a4,a2
  39              		.loc 1 19 75
  40 0044 13576700 		srli	a4,a4,6
  41              		.loc 1 19 25
  42 0048 2330E600 		sd	a4,0(a2)
  20:src/MemoryAllocator.cpp ****         fmem_head->prev = fmem_head->next = nullptr;
  43              		.loc 1 20 9 is_stmt 1
  44              		.loc 1 20 38 is_stmt 0
  45 004c 03B78600 		ld	a4,8(a3)
  46              		.loc 1 20 43
  47 0050 23340700 		sd	zero,8(a4)
  48              		.loc 1 20 25
  49 0054 23380700 		sd	zero,16(a4)
  21:src/MemoryAllocator.cpp ****         flag = true;
  50              		.loc 1 21 9 is_stmt 1
  51              		.loc 1 21 14 is_stmt 0
  52 0058 13071000 		li	a4,1
  53 005c 2380E600 		sb	a4,0(a3)
  54              	.L2:
  22:src/MemoryAllocator.cpp ****     }
  23:src/MemoryAllocator.cpp ****     if (fmem_head == nullptr) return nullptr;
  55              		.loc 1 23 5 is_stmt 1
  56              		.loc 1 23 19 is_stmt 0
  57 0060 17050000 		ld	a0,.LANCHOR0+8
  57      03350500 
  58              	.LVL1:
  59              		.loc 1 23 5
  60 0068 63060506 		beqz	a0,.L1
  61              	.L5:
  62              	.LVL2:
  63              	.LBB2:
  24:src/MemoryAllocator.cpp ****     BlockHeader* blk = nullptr;
  25:src/MemoryAllocator.cpp ****     for (BlockHeader* current = fmem_head; current; current = current->next)
  64              		.loc 1 25 44 is_stmt 1 discriminator 1
  65 006c 630A0500 		beqz	a0,.L4
  26:src/MemoryAllocator.cpp ****         if ((!blk && current->size >= numOfBlocks)) {
  66              		.loc 1 26 9 discriminator 1
  67              		.loc 1 26 31 is_stmt 0 discriminator 1
  68 0070 03370500 		ld	a4,0(a0)
  69              		.loc 1 26 19 discriminator 1
  70 0074 6376F700 		bgeu	a4,a5,.L4
  25:src/MemoryAllocator.cpp ****         if ((!blk && current->size >= numOfBlocks)) {
  71              		.loc 1 25 5 is_stmt 1 discriminator 2
  25:src/MemoryAllocator.cpp ****         if ((!blk && current->size >= numOfBlocks)) {
  72              		.loc 1 25 61 is_stmt 0 discriminator 2
  73 0078 03358500 		ld	a0,8(a0)
  74              	.LVL3:
  25:src/MemoryAllocator.cpp ****         if ((!blk && current->size >= numOfBlocks)) {
  75              		.loc 1 25 5 discriminator 2
  76 007c 6FF01FFF 		j	.L5
  77              	.L4:
  78              	.LVL4:
  79              	.LBE2:
  27:src/MemoryAllocator.cpp ****             blk = current;
  28:src/MemoryAllocator.cpp ****             break;
GAS LISTING /tmp/ccnWWnMI.s 			page 3


  29:src/MemoryAllocator.cpp ****         }
  30:src/MemoryAllocator.cpp ****     if (!blk) return nullptr;
  80              		.loc 1 30 5 is_stmt 1
  81 0080 630A0504 		beqz	a0,.L1
  31:src/MemoryAllocator.cpp ****     size_t remainingNumOfBlocks = blk->size - numOfBlocks;
  82              		.loc 1 31 5
  83              		.loc 1 31 40 is_stmt 0
  84 0084 03370500 		ld	a4,0(a0)
  85              		.loc 1 31 12
  86 0088 B306F740 		sub	a3,a4,a5
  87              	.LVL5:
  32:src/MemoryAllocator.cpp ****     if (remainingNumOfBlocks > 0) {
  88              		.loc 1 32 5 is_stmt 1
  89              	.LBB3:
  90 008c 6300F706 		beq	a4,a5,.L6
  91              	.LBB4:
  33:src/MemoryAllocator.cpp ****         blk->size = numOfBlocks;
  92              		.loc 1 33 9
  93              		.loc 1 33 19 is_stmt 0
  94 0090 2330F500 		sd	a5,0(a0)
  34:src/MemoryAllocator.cpp ****         BlockHeader* newBlk = (BlockHeader*)((char*)blk + numOfBlocks*MEM_BLOCK_SIZE);
  95              		.loc 1 34 9 is_stmt 1
  96              		.loc 1 34 70 is_stmt 0
  97 0094 93976700 		slli	a5,a5,6
  98              	.LVL6:
  99              		.loc 1 34 22
 100 0098 B307F500 		add	a5,a0,a5
 101              	.LVL7:
  35:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = newBlk;
 102              		.loc 1 35 9 is_stmt 1
 103              		.loc 1 35 18 is_stmt 0
 104 009c 03378500 		ld	a4,8(a0)
 105              		.loc 1 35 9
 106 00a0 63040700 		beqz	a4,.L7
 107              		.loc 1 35 24 is_stmt 1 discriminator 1
 108              		.loc 1 35 40 is_stmt 0 discriminator 1
 109 00a4 2338F700 		sd	a5,16(a4)
 110              	.LVL8:
 111              	.L7:
  36:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = newBlk;
 112              		.loc 1 36 9 is_stmt 1
 113              		.loc 1 36 18 is_stmt 0
 114 00a8 03370501 		ld	a4,16(a0)
 115              		.loc 1 36 9
 116 00ac 630A0702 		beqz	a4,.L8
 117              		.loc 1 36 24 is_stmt 1 discriminator 1
 118              		.loc 1 36 40 is_stmt 0 discriminator 1
 119 00b0 2334F700 		sd	a5,8(a4)
 120              	.L9:
  37:src/MemoryAllocator.cpp ****         else fmem_head = newBlk;
  38:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 121              		.loc 1 38 9 is_stmt 1
 122              		.loc 1 38 29 is_stmt 0
 123 00b4 03378500 		ld	a4,8(a0)
 124              		.loc 1 38 22
 125 00b8 23B4E700 		sd	a4,8(a5)
  39:src/MemoryAllocator.cpp ****         newBlk->prev = blk->prev;
GAS LISTING /tmp/ccnWWnMI.s 			page 4


 126              		.loc 1 39 9 is_stmt 1
 127              		.loc 1 39 29 is_stmt 0
 128 00bc 03370501 		ld	a4,16(a0)
 129              		.loc 1 39 22
 130 00c0 23B8E700 		sd	a4,16(a5)
  40:src/MemoryAllocator.cpp ****         newBlk->size = remainingNumOfBlocks;
 131              		.loc 1 40 9 is_stmt 1
 132              		.loc 1 40 22 is_stmt 0
 133 00c4 23B0D700 		sd	a3,0(a5)
 134              	.LVL9:
 135              	.L10:
 136              	.LBE4:
 137              	.LBE3:
  41:src/MemoryAllocator.cpp ****     }
  42:src/MemoryAllocator.cpp ****     else {
  43:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk->prev;
  44:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
  45:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
  46:src/MemoryAllocator.cpp ****     }
  47:src/MemoryAllocator.cpp ****     blk->next = nullptr;
 138              		.loc 1 47 5 is_stmt 1
 139              		.loc 1 47 15 is_stmt 0
 140 00c8 23340500 		sd	zero,8(a0)
  48:src/MemoryAllocator.cpp ****     blk->prev = nullptr;
 141              		.loc 1 48 5 is_stmt 1
 142              		.loc 1 48 15 is_stmt 0
 143 00cc 23380500 		sd	zero,16(a0)
  49:src/MemoryAllocator.cpp ****     return (char*)blk + sizeof(BlockHeader);
 144              		.loc 1 49 5 is_stmt 1
 145              		.loc 1 49 43 is_stmt 0
 146 00d0 13058501 		addi	a0,a0,24
 147              	.LVL10:
 148              	.L1:
  50:src/MemoryAllocator.cpp **** }
 149              		.loc 1 50 1
 150 00d4 03348100 		ld	s0,8(sp)
 151              		.cfi_remember_state
 152              		.cfi_restore 8
 153              		.cfi_def_cfa 2, 16
 154 00d8 13010101 		addi	sp,sp,16
 155              		.cfi_def_cfa_offset 0
 156 00dc 67800000 		jr	ra
 157              	.LVL11:
 158              	.L8:
 159              		.cfi_restore_state
 160              	.LBB6:
 161              	.LBB5:
  37:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 162              		.loc 1 37 14 is_stmt 1
  37:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 163              		.loc 1 37 24 is_stmt 0
 164 00e0 17070000 		sd	a5,.LANCHOR0+8,a4
 164      2330F700 
 165 00e8 6FF0DFFC 		j	.L9
 166              	.LVL12:
 167              	.L6:
 168              	.LBE5:
GAS LISTING /tmp/ccnWWnMI.s 			page 5


  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 169              		.loc 1 43 9 is_stmt 1
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 170              		.loc 1 43 18 is_stmt 0
 171 00ec 83378500 		ld	a5,8(a0)
 172              	.LVL13:
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 173              		.loc 1 43 9
 174 00f0 63860700 		beqz	a5,.L11
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 175              		.loc 1 43 24 is_stmt 1 discriminator 1
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 176              		.loc 1 43 47 is_stmt 0 discriminator 1
 177 00f4 03370501 		ld	a4,16(a0)
  43:src/MemoryAllocator.cpp ****         if (blk->prev) blk->prev->next = blk->next;
 178              		.loc 1 43 40 discriminator 1
 179 00f8 23B8E700 		sd	a4,16(a5)
 180              	.L11:
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 181              		.loc 1 44 9 is_stmt 1
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 182              		.loc 1 44 18 is_stmt 0
 183 00fc 83370501 		ld	a5,16(a0)
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 184              		.loc 1 44 9
 185 0100 63880700 		beqz	a5,.L12
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 186              		.loc 1 44 24 is_stmt 1 discriminator 1
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 187              		.loc 1 44 47 is_stmt 0 discriminator 1
 188 0104 03378500 		ld	a4,8(a0)
  44:src/MemoryAllocator.cpp ****         else fmem_head = blk->next;
 189              		.loc 1 44 40 discriminator 1
 190 0108 23B4E700 		sd	a4,8(a5)
 191 010c 6FF0DFFB 		j	.L10
 192              	.L12:
  45:src/MemoryAllocator.cpp ****     }
 193              		.loc 1 45 14 is_stmt 1
  45:src/MemoryAllocator.cpp ****     }
 194              		.loc 1 45 31 is_stmt 0
 195 0110 83378500 		ld	a5,8(a0)
  45:src/MemoryAllocator.cpp ****     }
 196              		.loc 1 45 24
 197 0114 17070000 		sd	a5,.LANCHOR0+8,a4
 197      2330F700 
 198 011c 6FF0DFFA 		j	.L10
 199              	.LBE6:
 200              		.cfi_endproc
 201              	.LFE1:
 203              		.align	2
 204              		.globl	_ZN15MemoryAllocator9allocateBEm
 206              	_ZN15MemoryAllocator9allocateBEm:
 207              	.LFB0:
  11:src/MemoryAllocator.cpp ****     uint64 numOfBlocks = (size+sizeof(BlockHeader))/MEM_BLOCK_SIZE + ((size+sizeof(BlockHeader)) % 
 208              		.loc 1 11 47 is_stmt 1
 209              		.cfi_startproc
 210              	.LVL14:
GAS LISTING /tmp/ccnWWnMI.s 			page 6


 211 0120 130101FF 		addi	sp,sp,-16
 212              		.cfi_def_cfa_offset 16
 213 0124 23341100 		sd	ra,8(sp)
 214 0128 23308100 		sd	s0,0(sp)
 215              		.cfi_offset 1, -8
 216              		.cfi_offset 8, -16
 217 012c 13040101 		addi	s0,sp,16
 218              		.cfi_def_cfa 8, 0
  12:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 219              		.loc 1 12 5
  12:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 220              		.loc 1 12 31 is_stmt 0
 221 0130 13058501 		addi	a0,a0,24
 222              	.LVL15:
  12:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 223              		.loc 1 12 52
 224 0134 93576500 		srli	a5,a0,6
  12:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 225              		.loc 1 12 98
 226 0138 1375F503 		andi	a0,a0,63
 227              	.LVL16:
  12:src/MemoryAllocator.cpp ****     return allocate(numOfBlocks);
 228              		.loc 1 12 119
 229 013c 63040500 		beqz	a0,.L15
 230 0140 13051000 		li	a0,1
 231              	.L15:
 232              	.LVL17:
  13:src/MemoryAllocator.cpp **** }
 233              		.loc 1 13 5 is_stmt 1 discriminator 4
  13:src/MemoryAllocator.cpp **** }
 234              		.loc 1 13 20 is_stmt 0 discriminator 4
 235 0144 3385A700 		add	a0,a5,a0
 236              	.LVL18:
 237 0148 97000000 		call	_ZN15MemoryAllocator8allocateEm
 237      E7800000 
 238              	.LVL19:
  14:src/MemoryAllocator.cpp **** 
 239              		.loc 1 14 1 discriminator 4
 240 0150 83308100 		ld	ra,8(sp)
 241              		.cfi_restore 1
 242 0154 03340100 		ld	s0,0(sp)
 243              		.cfi_restore 8
 244              		.cfi_def_cfa 2, 16
 245 0158 13010101 		addi	sp,sp,16
 246              		.cfi_def_cfa_offset 0
 247 015c 67800000 		jr	ra
 248              		.cfi_endproc
 249              	.LFE0:
 251              		.align	2
 252              		.globl	_ZN15MemoryAllocator9tryToJoinEP11BlockHeader
 254              	_ZN15MemoryAllocator9tryToJoinEP11BlockHeader:
 255              	.LFB3:
  51:src/MemoryAllocator.cpp **** 
  52:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void* addr) {
  53:src/MemoryAllocator.cpp ****     if (addr == nullptr) return 0;
  54:src/MemoryAllocator.cpp ****     BlockHeader* newBlk = (BlockHeader*) ((char*)addr - sizeof(BlockHeader));
  55:src/MemoryAllocator.cpp ****     if (newBlk < fmem_head) {
GAS LISTING /tmp/ccnWWnMI.s 			page 7


  56:src/MemoryAllocator.cpp ****         newBlk->next = fmem_head;
  57:src/MemoryAllocator.cpp ****         fmem_head->prev = newBlk;
  58:src/MemoryAllocator.cpp ****         newBlk->prev = nullptr;
  59:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
  60:src/MemoryAllocator.cpp ****     }
  61:src/MemoryAllocator.cpp ****     else if (fmem_head == nullptr){
  62:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
  63:src/MemoryAllocator.cpp ****         newBlk->next = newBlk->prev = nullptr;
  64:src/MemoryAllocator.cpp ****         return 0;
  65:src/MemoryAllocator.cpp ****     }
  66:src/MemoryAllocator.cpp ****     else {
  67:src/MemoryAllocator.cpp ****         BlockHeader* blk = fmem_head, *prev = nullptr;
  68:src/MemoryAllocator.cpp ****         while(blk && blk < newBlk){
  69:src/MemoryAllocator.cpp ****             prev = blk;
  70:src/MemoryAllocator.cpp ****             blk = blk->next;
  71:src/MemoryAllocator.cpp ****         }
  72:src/MemoryAllocator.cpp ****         newBlk->next = blk;
  73:src/MemoryAllocator.cpp ****         if (blk) blk->prev = newBlk;
  74:src/MemoryAllocator.cpp ****         newBlk->prev = prev;
  75:src/MemoryAllocator.cpp ****         prev->next = newBlk;
  76:src/MemoryAllocator.cpp ****     }
  77:src/MemoryAllocator.cpp ****     tryToJoin(newBlk);
  78:src/MemoryAllocator.cpp ****     tryToJoin(newBlk->prev);
  79:src/MemoryAllocator.cpp ****     return 0;
  80:src/MemoryAllocator.cpp **** }
  81:src/MemoryAllocator.cpp **** 
  82:src/MemoryAllocator.cpp **** void MemoryAllocator::tryToJoin(BlockHeader * blk) {
 256              		.loc 1 82 52 is_stmt 1
 257              		.cfi_startproc
 258              	.LVL20:
 259 0160 130101FF 		addi	sp,sp,-16
 260              		.cfi_def_cfa_offset 16
 261 0164 23348100 		sd	s0,8(sp)
 262              		.cfi_offset 8, -8
 263 0168 13040101 		addi	s0,sp,16
 264              		.cfi_def_cfa 8, 0
  83:src/MemoryAllocator.cpp ****     if (!blk) return;
 265              		.loc 1 83 5
 266 016c 630E0500 		beqz	a0,.L17
  84:src/MemoryAllocator.cpp ****     if (blk->next && (char*)blk + blk->size * MEM_BLOCK_SIZE == (char*)blk->next){
 267              		.loc 1 84 5
 268              	.LBB7:
 269              		.loc 1 84 14 is_stmt 0
 270 0170 03378500 		ld	a4,8(a0)
 271              		.loc 1 84 5
 272 0174 630A0700 		beqz	a4,.L17
 273              		.loc 1 84 40 discriminator 1
 274 0178 83370500 		ld	a5,0(a0)
 275              		.loc 1 84 45 discriminator 1
 276 017c 93976700 		slli	a5,a5,6
 277              		.loc 1 84 33 discriminator 1
 278 0180 B307F500 		add	a5,a0,a5
 279              		.loc 1 84 19 discriminator 1
 280 0184 6308F700 		beq	a4,a5,.L21
 281              	.L17:
 282              	.LBE7:
  85:src/MemoryAllocator.cpp ****         BlockHeader* nextBlk = blk->next;
GAS LISTING /tmp/ccnWWnMI.s 			page 8


  86:src/MemoryAllocator.cpp ****         blk->next = nextBlk->next;
  87:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
  88:src/MemoryAllocator.cpp ****         blk->size += nextBlk->size;
  89:src/MemoryAllocator.cpp ****     }
  90:src/MemoryAllocator.cpp **** }...
 283              		.loc 1 90 1
 284 0188 03348100 		ld	s0,8(sp)
 285              		.cfi_remember_state
 286              		.cfi_restore 8
 287              		.cfi_def_cfa 2, 16
 288 018c 13010101 		addi	sp,sp,16
 289              		.cfi_def_cfa_offset 0
 290 0190 67800000 		jr	ra
 291              	.L21:
 292              		.cfi_restore_state
 293              	.LBB9:
 294              	.LBB8:
  85:src/MemoryAllocator.cpp ****         BlockHeader* nextBlk = blk->next;
 295              		.loc 1 85 9 is_stmt 1
 296              	.LVL21:
  86:src/MemoryAllocator.cpp ****         blk->next = nextBlk->next;
 297              		.loc 1 86 9
  86:src/MemoryAllocator.cpp ****         blk->next = nextBlk->next;
 298              		.loc 1 86 30 is_stmt 0
 299 0194 83378700 		ld	a5,8(a4)
  86:src/MemoryAllocator.cpp ****         blk->next = nextBlk->next;
 300              		.loc 1 86 19
 301 0198 2334F500 		sd	a5,8(a0)
  87:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 302              		.loc 1 87 9 is_stmt 1
 303 019c 63840700 		beqz	a5,.L19
  87:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 304              		.loc 1 87 24 discriminator 1
  87:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 305              		.loc 1 87 40 is_stmt 0 discriminator 1
 306 01a0 23B8A700 		sd	a0,16(a5)
 307              	.L19:
  88:src/MemoryAllocator.cpp ****         blk->size += nextBlk->size;
 308              		.loc 1 88 9 is_stmt 1
  88:src/MemoryAllocator.cpp ****         blk->size += nextBlk->size;
 309              		.loc 1 88 31 is_stmt 0
 310 01a4 03370700 		ld	a4,0(a4)
 311              	.LVL22:
  88:src/MemoryAllocator.cpp ****         blk->size += nextBlk->size;
 312              		.loc 1 88 19
 313 01a8 83370500 		ld	a5,0(a0)
 314 01ac B387E700 		add	a5,a5,a4
 315 01b0 2330F500 		sd	a5,0(a0)
 316              	.LBE8:
 317 01b4 6FF05FFD 		j	.L17
 318              	.LBE9:
 319              		.cfi_endproc
 320              	.LFE3:
 322              		.align	2
 323              		.globl	_ZN15MemoryAllocator4freeEPv
 325              	_ZN15MemoryAllocator4freeEPv:
 326              	.LFB2:
GAS LISTING /tmp/ccnWWnMI.s 			page 9


  52:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void* addr) {
 327              		.loc 1 52 39 is_stmt 1
 328              		.cfi_startproc
 329              	.LVL23:
  53:src/MemoryAllocator.cpp ****     if (addr == nullptr) return 0;
 330              		.loc 1 53 5
 331 01b8 630A050A 		beqz	a0,.L31
  52:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void* addr) {
 332              		.loc 1 52 39 is_stmt 0
 333 01bc 130101FE 		addi	sp,sp,-32
 334              		.cfi_def_cfa_offset 32
 335 01c0 233C1100 		sd	ra,24(sp)
 336 01c4 23388100 		sd	s0,16(sp)
 337 01c8 23349100 		sd	s1,8(sp)
 338              		.cfi_offset 1, -8
 339              		.cfi_offset 8, -16
 340              		.cfi_offset 9, -24
 341 01cc 13040102 		addi	s0,sp,32
 342              		.cfi_def_cfa 8, 0
 343 01d0 93040500 		mv	s1,a0
  54:src/MemoryAllocator.cpp ****     BlockHeader* newBlk = (BlockHeader*) ((char*)addr - sizeof(BlockHeader));
 344              		.loc 1 54 5 is_stmt 1
  54:src/MemoryAllocator.cpp ****     BlockHeader* newBlk = (BlockHeader*) ((char*)addr - sizeof(BlockHeader));
 345              		.loc 1 54 18 is_stmt 0
 346 01d4 130585FE 		addi	a0,a0,-24
 347              	.LVL24:
  55:src/MemoryAllocator.cpp ****     if (newBlk < fmem_head) {
 348              		.loc 1 55 5 is_stmt 1
 349              	.LBB10:
  55:src/MemoryAllocator.cpp ****     if (newBlk < fmem_head) {
 350              		.loc 1 55 16 is_stmt 0
 351 01d8 97070000 		ld	a5,.LANCHOR0+8
 351      83B70700 
  55:src/MemoryAllocator.cpp ****     if (newBlk < fmem_head) {
 352              		.loc 1 55 5
 353 01e0 6372F504 		bleu	a5,a0,.L24
  56:src/MemoryAllocator.cpp ****         newBlk->next = fmem_head;
 354              		.loc 1 56 9 is_stmt 1
  56:src/MemoryAllocator.cpp ****         newBlk->next = fmem_head;
 355              		.loc 1 56 22 is_stmt 0
 356 01e4 23B8F4FE 		sd	a5,-16(s1)
  57:src/MemoryAllocator.cpp ****         fmem_head->prev = newBlk;
 357              		.loc 1 57 9 is_stmt 1
  57:src/MemoryAllocator.cpp ****         fmem_head->prev = newBlk;
 358              		.loc 1 57 25 is_stmt 0
 359 01e8 23B8A700 		sd	a0,16(a5)
  58:src/MemoryAllocator.cpp ****         newBlk->prev = nullptr;
 360              		.loc 1 58 9 is_stmt 1
  58:src/MemoryAllocator.cpp ****         newBlk->prev = nullptr;
 361              		.loc 1 58 22 is_stmt 0
 362 01ec 23BC04FE 		sd	zero,-8(s1)
  59:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
 363              		.loc 1 59 9 is_stmt 1
  59:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
 364              		.loc 1 59 19 is_stmt 0
 365 01f0 97070000 		sd	a0,.LANCHOR0+8,a5
 365      23B0A700 
GAS LISTING /tmp/ccnWWnMI.s 			page 10


 366              	.L25:
 367              	.LBE10:
  77:src/MemoryAllocator.cpp ****     tryToJoin(newBlk);
 368              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp ****     tryToJoin(newBlk);
 369              		.loc 1 77 14 is_stmt 0
 370 01f8 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP11BlockHeader
 370      E7800000 
 371              	.LVL25:
  78:src/MemoryAllocator.cpp ****     tryToJoin(newBlk->prev);
 372              		.loc 1 78 5 is_stmt 1
  78:src/MemoryAllocator.cpp ****     tryToJoin(newBlk->prev);
 373              		.loc 1 78 14 is_stmt 0
 374 0200 03B584FF 		ld	a0,-8(s1)
 375 0204 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP11BlockHeader
 375      E7800000 
 376              	.LVL26:
  79:src/MemoryAllocator.cpp ****     return 0;
 377              		.loc 1 79 5 is_stmt 1
 378              	.L23:
  80:src/MemoryAllocator.cpp **** }
 379              		.loc 1 80 1 is_stmt 0
 380 020c 13050000 		li	a0,0
 381 0210 83308101 		ld	ra,24(sp)
 382              		.cfi_remember_state
 383              		.cfi_restore 1
 384 0214 03340101 		ld	s0,16(sp)
 385              		.cfi_restore 8
 386              		.cfi_def_cfa 2, 32
 387 0218 83348100 		ld	s1,8(sp)
 388              		.cfi_restore 9
 389              	.LVL27:
 390 021c 13010102 		addi	sp,sp,32
 391              		.cfi_def_cfa_offset 0
 392 0220 67800000 		jr	ra
 393              	.LVL28:
 394              	.L24:
 395              		.cfi_restore_state
  61:src/MemoryAllocator.cpp ****     else if (fmem_head == nullptr){
 396              		.loc 1 61 10 is_stmt 1
 397              	.LBB14:
 398              	.LBB11:
 399 0224 638E0700 		beqz	a5,.L34
 400              	.LBB12:
  67:src/MemoryAllocator.cpp ****         BlockHeader* blk = fmem_head, *prev = nullptr;
 401              		.loc 1 67 40 is_stmt 0
 402 0228 13070000 		li	a4,0
 403              	.L26:
 404              	.LVL29:
  68:src/MemoryAllocator.cpp ****         while(blk && blk < newBlk){
 405              		.loc 1 68 9 is_stmt 1
  68:src/MemoryAllocator.cpp ****         while(blk && blk < newBlk){
 406              		.loc 1 68 19
 407 022c 63840702 		beqz	a5,.L27
  68:src/MemoryAllocator.cpp ****         while(blk && blk < newBlk){
 408              		.loc 1 68 19 is_stmt 0 discriminator 1
 409 0230 63F2A702 		bgeu	a5,a0,.L27
GAS LISTING /tmp/ccnWWnMI.s 			page 11


  69:src/MemoryAllocator.cpp ****             prev = blk;
 410              		.loc 1 69 13 is_stmt 1
 411              	.LVL30:
  70:src/MemoryAllocator.cpp ****             blk = blk->next;
 412              		.loc 1 70 13
  69:src/MemoryAllocator.cpp ****             prev = blk;
 413              		.loc 1 69 18 is_stmt 0
 414 0234 13870700 		mv	a4,a5
  70:src/MemoryAllocator.cpp ****             blk = blk->next;
 415              		.loc 1 70 17
 416 0238 83B78700 		ld	a5,8(a5)
 417              	.LVL31:
  68:src/MemoryAllocator.cpp ****         while(blk && blk < newBlk){
 418              		.loc 1 68 9
 419 023c 6FF01FFF 		j	.L26
 420              	.LVL32:
 421              	.L34:
 422              	.LBE12:
  62:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
 423              		.loc 1 62 9 is_stmt 1
  62:src/MemoryAllocator.cpp ****         fmem_head = newBlk;
 424              		.loc 1 62 19 is_stmt 0
 425 0240 97070000 		sd	a0,.LANCHOR0+8,a5
 425      23B0A700 
  63:src/MemoryAllocator.cpp ****         newBlk->next = newBlk->prev = nullptr;
 426              		.loc 1 63 9 is_stmt 1
  63:src/MemoryAllocator.cpp ****         newBlk->next = newBlk->prev = nullptr;
 427              		.loc 1 63 37 is_stmt 0
 428 0248 23BC04FE 		sd	zero,-8(s1)
  63:src/MemoryAllocator.cpp ****         newBlk->next = newBlk->prev = nullptr;
 429              		.loc 1 63 22
 430 024c 23B804FE 		sd	zero,-16(s1)
  64:src/MemoryAllocator.cpp ****         return 0;
 431              		.loc 1 64 9 is_stmt 1
  64:src/MemoryAllocator.cpp ****         return 0;
 432              		.loc 1 64 16 is_stmt 0
 433 0250 6FF0DFFB 		j	.L23
 434              	.LVL33:
 435              	.L27:
 436              	.LBB13:
  72:src/MemoryAllocator.cpp ****         newBlk->next = blk;
 437              		.loc 1 72 9 is_stmt 1
  72:src/MemoryAllocator.cpp ****         newBlk->next = blk;
 438              		.loc 1 72 22 is_stmt 0
 439 0254 23B8F4FE 		sd	a5,-16(s1)
  73:src/MemoryAllocator.cpp ****         if (blk) blk->prev = newBlk;
 440              		.loc 1 73 9 is_stmt 1
 441 0258 63840700 		beqz	a5,.L28
  73:src/MemoryAllocator.cpp ****         if (blk) blk->prev = newBlk;
 442              		.loc 1 73 18 discriminator 1
  73:src/MemoryAllocator.cpp ****         if (blk) blk->prev = newBlk;
 443              		.loc 1 73 28 is_stmt 0 discriminator 1
 444 025c 23B8A700 		sd	a0,16(a5)
 445              	.L28:
  74:src/MemoryAllocator.cpp ****         newBlk->prev = prev;
 446              		.loc 1 74 9 is_stmt 1
  74:src/MemoryAllocator.cpp ****         newBlk->prev = prev;
GAS LISTING /tmp/ccnWWnMI.s 			page 12


 447              		.loc 1 74 22 is_stmt 0
 448 0260 23BCE4FE 		sd	a4,-8(s1)
  75:src/MemoryAllocator.cpp ****         prev->next = newBlk;
 449              		.loc 1 75 9 is_stmt 1
  75:src/MemoryAllocator.cpp ****         prev->next = newBlk;
 450              		.loc 1 75 20 is_stmt 0
 451 0264 2334A700 		sd	a0,8(a4)
 452 0268 6FF01FF9 		j	.L25
 453              	.LVL34:
 454              	.L31:
 455              		.cfi_def_cfa_register 2
 456              		.cfi_restore 1
 457              		.cfi_restore 8
 458              		.cfi_restore 9
 459              	.LBE13:
 460              	.LBE11:
 461              	.LBE14:
  80:src/MemoryAllocator.cpp **** }
 462              		.loc 1 80 1
 463 026c 13050000 		li	a0,0
 464              	.LVL35:
 465 0270 67800000 		ret
 466              		.cfi_endproc
 467              	.LFE2:
 469              		.globl	_ZN15MemoryAllocator4flagE
 470              		.globl	_ZN15MemoryAllocator9fmem_headE
 471              		.bss
 472              		.align	3
 473              		.set	.LANCHOR0,. + 0
 476              	_ZN15MemoryAllocator4flagE:
 477 0000 00       		.zero	1
 478 0001 00000000 		.zero	7
 478      000000
 481              	_ZN15MemoryAllocator9fmem_headE:
 482 0008 00000000 		.zero	8
 482      00000000 
 483              		.text
 484              	.Letext0:
 485              		.file 2 "src/../h/../lib/hw.h"
 486              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccnWWnMI.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccnWWnMI.s:9      .text:0000000000000000 _ZN15MemoryAllocator8allocateEm
     /tmp/ccnWWnMI.s:13     .text:0000000000000000 .L0 
     /tmp/ccnWWnMI.s:15     .text:0000000000000000 .L0 
     /tmp/ccnWWnMI.s:16     .text:0000000000000004 .L0 
     /tmp/ccnWWnMI.s:18     .text:0000000000000008 .L0 
     /tmp/ccnWWnMI.s:20     .text:000000000000000c .L0 
     /tmp/ccnWWnMI.s:23     .text:0000000000000010 .L0 
     /tmp/ccnWWnMI.s:24     .text:0000000000000010 .L0 
     /tmp/ccnWWnMI.s:26     .text:0000000000000018 .L0 
     /tmp/ccnWWnMI.s:28     .text:000000000000001c .L0 
     /tmp/ccnWWnMI.s:29     .text:000000000000001c .L0 
     /tmp/ccnWWnMI.s:34     .text:0000000000000034 .L0 
     /tmp/ccnWWnMI.s:35     .text:0000000000000034 .L0 
     /tmp/ccnWWnMI.s:38     .text:0000000000000040 .L0 
     /tmp/ccnWWnMI.s:40     .text:0000000000000044 .L0 
     /tmp/ccnWWnMI.s:42     .text:0000000000000048 .L0 
     /tmp/ccnWWnMI.s:44     .text:000000000000004c .L0 
     /tmp/ccnWWnMI.s:45     .text:000000000000004c .L0 
     /tmp/ccnWWnMI.s:47     .text:0000000000000050 .L0 
     /tmp/ccnWWnMI.s:49     .text:0000000000000054 .L0 
     /tmp/ccnWWnMI.s:51     .text:0000000000000058 .L0 
     /tmp/ccnWWnMI.s:52     .text:0000000000000058 .L0 
     /tmp/ccnWWnMI.s:56     .text:0000000000000060 .L0 
     /tmp/ccnWWnMI.s:57     .text:0000000000000060 .L0 
     /tmp/ccnWWnMI.s:60     .text:0000000000000068 .L0 
     /tmp/ccnWWnMI.s:65     .text:000000000000006c .L0 
     /tmp/ccnWWnMI.s:67     .text:0000000000000070 .L0 
     /tmp/ccnWWnMI.s:68     .text:0000000000000070 .L0 
     /tmp/ccnWWnMI.s:70     .text:0000000000000074 .L0 
     /tmp/ccnWWnMI.s:72     .text:0000000000000078 .L0 
     /tmp/ccnWWnMI.s:73     .text:0000000000000078 .L0 
     /tmp/ccnWWnMI.s:76     .text:000000000000007c .L0 
     /tmp/ccnWWnMI.s:81     .text:0000000000000080 .L0 
     /tmp/ccnWWnMI.s:83     .text:0000000000000084 .L0 
     /tmp/ccnWWnMI.s:84     .text:0000000000000084 .L0 
     /tmp/ccnWWnMI.s:86     .text:0000000000000088 .L0 
     /tmp/ccnWWnMI.s:90     .text:000000000000008c .L0 
     /tmp/ccnWWnMI.s:93     .text:0000000000000090 .L0 
     /tmp/ccnWWnMI.s:94     .text:0000000000000090 .L0 
     /tmp/ccnWWnMI.s:96     .text:0000000000000094 .L0 
     /tmp/ccnWWnMI.s:97     .text:0000000000000094 .L0 
     /tmp/ccnWWnMI.s:100    .text:0000000000000098 .L0 
     /tmp/ccnWWnMI.s:103    .text:000000000000009c .L0 
     /tmp/ccnWWnMI.s:104    .text:000000000000009c .L0 
     /tmp/ccnWWnMI.s:106    .text:00000000000000a0 .L0 
     /tmp/ccnWWnMI.s:108    .text:00000000000000a4 .L0 
     /tmp/ccnWWnMI.s:109    .text:00000000000000a4 .L0 
     /tmp/ccnWWnMI.s:113    .text:00000000000000a8 .L0 
     /tmp/ccnWWnMI.s:114    .text:00000000000000a8 .L0 
     /tmp/ccnWWnMI.s:116    .text:00000000000000ac .L0 
     /tmp/ccnWWnMI.s:118    .text:00000000000000b0 .L0 
     /tmp/ccnWWnMI.s:119    .text:00000000000000b0 .L0 
     /tmp/ccnWWnMI.s:122    .text:00000000000000b4 .L0 
     /tmp/ccnWWnMI.s:123    .text:00000000000000b4 .L0 
     /tmp/ccnWWnMI.s:125    .text:00000000000000b8 .L0 
GAS LISTING /tmp/ccnWWnMI.s 			page 14


     /tmp/ccnWWnMI.s:127    .text:00000000000000bc .L0 
     /tmp/ccnWWnMI.s:128    .text:00000000000000bc .L0 
     /tmp/ccnWWnMI.s:130    .text:00000000000000c0 .L0 
     /tmp/ccnWWnMI.s:132    .text:00000000000000c4 .L0 
     /tmp/ccnWWnMI.s:133    .text:00000000000000c4 .L0 
     /tmp/ccnWWnMI.s:139    .text:00000000000000c8 .L0 
     /tmp/ccnWWnMI.s:140    .text:00000000000000c8 .L0 
     /tmp/ccnWWnMI.s:142    .text:00000000000000cc .L0 
     /tmp/ccnWWnMI.s:143    .text:00000000000000cc .L0 
     /tmp/ccnWWnMI.s:145    .text:00000000000000d0 .L0 
     /tmp/ccnWWnMI.s:146    .text:00000000000000d0 .L0 
     /tmp/ccnWWnMI.s:150    .text:00000000000000d4 .L0 
     /tmp/ccnWWnMI.s:151    .text:00000000000000d8 .L0 
     /tmp/ccnWWnMI.s:152    .text:00000000000000d8 .L0 
     /tmp/ccnWWnMI.s:153    .text:00000000000000d8 .L0 
     /tmp/ccnWWnMI.s:155    .text:00000000000000dc .L0 
     /tmp/ccnWWnMI.s:159    .text:00000000000000e0 .L0 
     /tmp/ccnWWnMI.s:163    .text:00000000000000e0 .L0 
     /tmp/ccnWWnMI.s:164    .text:00000000000000e0 .L0 
     /tmp/ccnWWnMI.s:170    .text:00000000000000ec .L0 
     /tmp/ccnWWnMI.s:171    .text:00000000000000ec .L0 
     /tmp/ccnWWnMI.s:174    .text:00000000000000f0 .L0 
     /tmp/ccnWWnMI.s:176    .text:00000000000000f4 .L0 
     /tmp/ccnWWnMI.s:177    .text:00000000000000f4 .L0 
     /tmp/ccnWWnMI.s:179    .text:00000000000000f8 .L0 
     /tmp/ccnWWnMI.s:182    .text:00000000000000fc .L0 
     /tmp/ccnWWnMI.s:183    .text:00000000000000fc .L0 
     /tmp/ccnWWnMI.s:185    .text:0000000000000100 .L0 
     /tmp/ccnWWnMI.s:187    .text:0000000000000104 .L0 
     /tmp/ccnWWnMI.s:188    .text:0000000000000104 .L0 
     /tmp/ccnWWnMI.s:190    .text:0000000000000108 .L0 
     /tmp/ccnWWnMI.s:194    .text:0000000000000110 .L0 
     /tmp/ccnWWnMI.s:195    .text:0000000000000110 .L0 
     /tmp/ccnWWnMI.s:197    .text:0000000000000114 .L0 
     /tmp/ccnWWnMI.s:200    .text:0000000000000120 .L0 
     /tmp/ccnWWnMI.s:206    .text:0000000000000120 _ZN15MemoryAllocator9allocateBEm
     /tmp/ccnWWnMI.s:209    .text:0000000000000120 .L0 
     /tmp/ccnWWnMI.s:211    .text:0000000000000120 .L0 
     /tmp/ccnWWnMI.s:212    .text:0000000000000124 .L0 
     /tmp/ccnWWnMI.s:215    .text:000000000000012c .L0 
     /tmp/ccnWWnMI.s:216    .text:000000000000012c .L0 
     /tmp/ccnWWnMI.s:218    .text:0000000000000130 .L0 
     /tmp/ccnWWnMI.s:220    .text:0000000000000130 .L0 
     /tmp/ccnWWnMI.s:221    .text:0000000000000130 .L0 
     /tmp/ccnWWnMI.s:224    .text:0000000000000134 .L0 
     /tmp/ccnWWnMI.s:226    .text:0000000000000138 .L0 
     /tmp/ccnWWnMI.s:229    .text:000000000000013c .L0 
     /tmp/ccnWWnMI.s:234    .text:0000000000000144 .L0 
     /tmp/ccnWWnMI.s:235    .text:0000000000000144 .L0 
     /tmp/ccnWWnMI.s:240    .text:0000000000000150 .L0 
     /tmp/ccnWWnMI.s:241    .text:0000000000000154 .L0 
     /tmp/ccnWWnMI.s:243    .text:0000000000000158 .L0 
     /tmp/ccnWWnMI.s:244    .text:0000000000000158 .L0 
     /tmp/ccnWWnMI.s:246    .text:000000000000015c .L0 
     /tmp/ccnWWnMI.s:248    .text:0000000000000160 .L0 
     /tmp/ccnWWnMI.s:254    .text:0000000000000160 _ZN15MemoryAllocator9tryToJoinEP11BlockHeader
     /tmp/ccnWWnMI.s:257    .text:0000000000000160 .L0 
GAS LISTING /tmp/ccnWWnMI.s 			page 15


     /tmp/ccnWWnMI.s:259    .text:0000000000000160 .L0 
     /tmp/ccnWWnMI.s:260    .text:0000000000000164 .L0 
     /tmp/ccnWWnMI.s:262    .text:0000000000000168 .L0 
     /tmp/ccnWWnMI.s:264    .text:000000000000016c .L0 
     /tmp/ccnWWnMI.s:266    .text:000000000000016c .L0 
     /tmp/ccnWWnMI.s:269    .text:0000000000000170 .L0 
     /tmp/ccnWWnMI.s:270    .text:0000000000000170 .L0 
     /tmp/ccnWWnMI.s:272    .text:0000000000000174 .L0 
     /tmp/ccnWWnMI.s:274    .text:0000000000000178 .L0 
     /tmp/ccnWWnMI.s:276    .text:000000000000017c .L0 
     /tmp/ccnWWnMI.s:278    .text:0000000000000180 .L0 
     /tmp/ccnWWnMI.s:280    .text:0000000000000184 .L0 
     /tmp/ccnWWnMI.s:284    .text:0000000000000188 .L0 
     /tmp/ccnWWnMI.s:285    .text:000000000000018c .L0 
     /tmp/ccnWWnMI.s:286    .text:000000000000018c .L0 
     /tmp/ccnWWnMI.s:287    .text:000000000000018c .L0 
     /tmp/ccnWWnMI.s:289    .text:0000000000000190 .L0 
     /tmp/ccnWWnMI.s:292    .text:0000000000000194 .L0 
     /tmp/ccnWWnMI.s:297    .text:0000000000000194 .L0 
     /tmp/ccnWWnMI.s:298    .text:0000000000000194 .L0 
     /tmp/ccnWWnMI.s:299    .text:0000000000000194 .L0 
     /tmp/ccnWWnMI.s:301    .text:0000000000000198 .L0 
     /tmp/ccnWWnMI.s:303    .text:000000000000019c .L0 
     /tmp/ccnWWnMI.s:305    .text:00000000000001a0 .L0 
     /tmp/ccnWWnMI.s:306    .text:00000000000001a0 .L0 
     /tmp/ccnWWnMI.s:309    .text:00000000000001a4 .L0 
     /tmp/ccnWWnMI.s:310    .text:00000000000001a4 .L0 
     /tmp/ccnWWnMI.s:313    .text:00000000000001a8 .L0 
     /tmp/ccnWWnMI.s:319    .text:00000000000001b8 .L0 
     /tmp/ccnWWnMI.s:325    .text:00000000000001b8 _ZN15MemoryAllocator4freeEPv
     /tmp/ccnWWnMI.s:328    .text:00000000000001b8 .L0 
     /tmp/ccnWWnMI.s:330    .text:00000000000001b8 .L0 
     /tmp/ccnWWnMI.s:331    .text:00000000000001b8 .L0 
     /tmp/ccnWWnMI.s:333    .text:00000000000001bc .L0 
     /tmp/ccnWWnMI.s:334    .text:00000000000001c0 .L0 
     /tmp/ccnWWnMI.s:338    .text:00000000000001cc .L0 
     /tmp/ccnWWnMI.s:339    .text:00000000000001cc .L0 
     /tmp/ccnWWnMI.s:340    .text:00000000000001cc .L0 
     /tmp/ccnWWnMI.s:342    .text:00000000000001d0 .L0 
     /tmp/ccnWWnMI.s:345    .text:00000000000001d4 .L0 
     /tmp/ccnWWnMI.s:346    .text:00000000000001d4 .L0 
     /tmp/ccnWWnMI.s:350    .text:00000000000001d8 .L0 
     /tmp/ccnWWnMI.s:351    .text:00000000000001d8 .L0 
     /tmp/ccnWWnMI.s:353    .text:00000000000001e0 .L0 
     /tmp/ccnWWnMI.s:355    .text:00000000000001e4 .L0 
     /tmp/ccnWWnMI.s:356    .text:00000000000001e4 .L0 
     /tmp/ccnWWnMI.s:358    .text:00000000000001e8 .L0 
     /tmp/ccnWWnMI.s:359    .text:00000000000001e8 .L0 
     /tmp/ccnWWnMI.s:361    .text:00000000000001ec .L0 
     /tmp/ccnWWnMI.s:362    .text:00000000000001ec .L0 
     /tmp/ccnWWnMI.s:364    .text:00000000000001f0 .L0 
     /tmp/ccnWWnMI.s:365    .text:00000000000001f0 .L0 
     /tmp/ccnWWnMI.s:369    .text:00000000000001f8 .L0 
     /tmp/ccnWWnMI.s:370    .text:00000000000001f8 .L0 
     /tmp/ccnWWnMI.s:373    .text:0000000000000200 .L0 
     /tmp/ccnWWnMI.s:374    .text:0000000000000200 .L0 
     /tmp/ccnWWnMI.s:379    .text:000000000000020c .L0 
GAS LISTING /tmp/ccnWWnMI.s 			page 16


     /tmp/ccnWWnMI.s:380    .text:000000000000020c .L0 
     /tmp/ccnWWnMI.s:382    .text:0000000000000214 .L0 
     /tmp/ccnWWnMI.s:383    .text:0000000000000214 .L0 
     /tmp/ccnWWnMI.s:385    .text:0000000000000218 .L0 
     /tmp/ccnWWnMI.s:386    .text:0000000000000218 .L0 
     /tmp/ccnWWnMI.s:388    .text:000000000000021c .L0 
     /tmp/ccnWWnMI.s:391    .text:0000000000000220 .L0 
     /tmp/ccnWWnMI.s:395    .text:0000000000000224 .L0 
     /tmp/ccnWWnMI.s:399    .text:0000000000000224 .L0 
     /tmp/ccnWWnMI.s:402    .text:0000000000000228 .L0 
     /tmp/ccnWWnMI.s:406    .text:000000000000022c .L0 
     /tmp/ccnWWnMI.s:407    .text:000000000000022c .L0 
     /tmp/ccnWWnMI.s:409    .text:0000000000000230 .L0 
     /tmp/ccnWWnMI.s:412    .text:0000000000000234 .L0 
     /tmp/ccnWWnMI.s:413    .text:0000000000000234 .L0 
     /tmp/ccnWWnMI.s:414    .text:0000000000000234 .L0 
     /tmp/ccnWWnMI.s:416    .text:0000000000000238 .L0 
     /tmp/ccnWWnMI.s:419    .text:000000000000023c .L0 
     /tmp/ccnWWnMI.s:424    .text:0000000000000240 .L0 
     /tmp/ccnWWnMI.s:425    .text:0000000000000240 .L0 
     /tmp/ccnWWnMI.s:427    .text:0000000000000248 .L0 
     /tmp/ccnWWnMI.s:428    .text:0000000000000248 .L0 
     /tmp/ccnWWnMI.s:430    .text:000000000000024c .L0 
     /tmp/ccnWWnMI.s:432    .text:0000000000000250 .L0 
     /tmp/ccnWWnMI.s:433    .text:0000000000000250 .L0 
     /tmp/ccnWWnMI.s:438    .text:0000000000000254 .L0 
     /tmp/ccnWWnMI.s:439    .text:0000000000000254 .L0 
     /tmp/ccnWWnMI.s:441    .text:0000000000000258 .L0 
     /tmp/ccnWWnMI.s:443    .text:000000000000025c .L0 
     /tmp/ccnWWnMI.s:444    .text:000000000000025c .L0 
     /tmp/ccnWWnMI.s:447    .text:0000000000000260 .L0 
     /tmp/ccnWWnMI.s:448    .text:0000000000000260 .L0 
     /tmp/ccnWWnMI.s:450    .text:0000000000000264 .L0 
     /tmp/ccnWWnMI.s:451    .text:0000000000000264 .L0 
     /tmp/ccnWWnMI.s:455    .text:000000000000026c .L0 
     /tmp/ccnWWnMI.s:456    .text:000000000000026c .L0 
     /tmp/ccnWWnMI.s:457    .text:000000000000026c .L0 
     /tmp/ccnWWnMI.s:458    .text:000000000000026c .L0 
     /tmp/ccnWWnMI.s:463    .text:000000000000026c .L0 
     /tmp/ccnWWnMI.s:466    .text:0000000000000274 .L0 
     /tmp/ccnWWnMI.s:476    .bss:0000000000000000 _ZN15MemoryAllocator4flagE
     /tmp/ccnWWnMI.s:481    .bss:0000000000000008 _ZN15MemoryAllocator9fmem_headE
     /tmp/ccnWWnMI.s:473    .bss:0000000000000000 .LANCHOR0
     /tmp/ccnWWnMI.s:487    .text:0000000000000274 .L0 
     /tmp/ccnWWnMI.s:24     .text:0000000000000010 .L0 
     /tmp/ccnWWnMI.s:29     .text:000000000000001c .L0 
     /tmp/ccnWWnMI.s:31     .text:0000000000000028 .L0 
     /tmp/ccnWWnMI.s:35     .text:0000000000000034 .L0 
     /tmp/ccnWWnMI.s:57     .text:0000000000000060 .L0 
     /tmp/ccnWWnMI.s:164    .text:00000000000000e0 .L0 
     /tmp/ccnWWnMI.s:197    .text:0000000000000114 .L0 
     /tmp/ccnWWnMI.s:351    .text:00000000000001d8 .L0 
     /tmp/ccnWWnMI.s:365    .text:00000000000001f0 .L0 
     /tmp/ccnWWnMI.s:425    .text:0000000000000240 .L0 
     /tmp/ccnWWnMI.s:54     .text:0000000000000060 .L2
     /tmp/ccnWWnMI.s:148    .text:00000000000000d4 .L1
     /tmp/ccnWWnMI.s:77     .text:0000000000000080 .L4
GAS LISTING /tmp/ccnWWnMI.s 			page 17


     /tmp/ccnWWnMI.s:61     .text:000000000000006c .L5
     /tmp/ccnWWnMI.s:167    .text:00000000000000ec .L6
     /tmp/ccnWWnMI.s:111    .text:00000000000000a8 .L7
     /tmp/ccnWWnMI.s:158    .text:00000000000000e0 .L8
     /tmp/ccnWWnMI.s:120    .text:00000000000000b4 .L9
     /tmp/ccnWWnMI.s:180    .text:00000000000000fc .L11
     /tmp/ccnWWnMI.s:192    .text:0000000000000110 .L12
     /tmp/ccnWWnMI.s:135    .text:00000000000000c8 .L10
     /tmp/ccnWWnMI.s:231    .text:0000000000000144 .L15
     /tmp/ccnWWnMI.s:281    .text:0000000000000188 .L17
     /tmp/ccnWWnMI.s:291    .text:0000000000000194 .L21
     /tmp/ccnWWnMI.s:307    .text:00000000000001a4 .L19
     /tmp/ccnWWnMI.s:454    .text:000000000000026c .L31
     /tmp/ccnWWnMI.s:394    .text:0000000000000224 .L24
     /tmp/ccnWWnMI.s:421    .text:0000000000000240 .L34
     /tmp/ccnWWnMI.s:435    .text:0000000000000254 .L27
     /tmp/ccnWWnMI.s:403    .text:000000000000022c .L26
     /tmp/ccnWWnMI.s:378    .text:000000000000020c .L23
     /tmp/ccnWWnMI.s:445    .text:0000000000000260 .L28
     /tmp/ccnWWnMI.s:366    .text:00000000000001f8 .L25
     /tmp/ccnWWnMI.s:913    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccnWWnMI.s:1704   .debug_str:0000000000000146 .LASF39
     /tmp/ccnWWnMI.s:1726   .debug_str:00000000000002d5 .LASF40
     /tmp/ccnWWnMI.s:1744   .debug_str:000000000000034e .LASF41
     /tmp/ccnWWnMI.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccnWWnMI.s:484    .text:0000000000000274 .Letext0
     /tmp/ccnWWnMI.s:1658   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccnWWnMI.s:1718   .debug_str:000000000000029d .LASF0
     /tmp/ccnWWnMI.s:1698   .debug_str:0000000000000120 .LASF1
     /tmp/ccnWWnMI.s:1692   .debug_str:00000000000000f8 .LASF2
     /tmp/ccnWWnMI.s:1674   .debug_str:0000000000000067 .LASF4
     /tmp/ccnWWnMI.s:1696   .debug_str:000000000000010e .LASF3
     /tmp/ccnWWnMI.s:1664   .debug_str:0000000000000023 .LASF5
     /tmp/ccnWWnMI.s:1660   .debug_str:0000000000000000 .LASF6
     /tmp/ccnWWnMI.s:1684   .debug_str:00000000000000ab .LASF7
     /tmp/ccnWWnMI.s:1722   .debug_str:00000000000002af .LASF8
     /tmp/ccnWWnMI.s:1670   .debug_str:000000000000004f .LASF9
     /tmp/ccnWWnMI.s:1748   .debug_str:0000000000000383 .LASF10
     /tmp/ccnWWnMI.s:1688   .debug_str:00000000000000c8 .LASF11
     /tmp/ccnWWnMI.s:1740   .debug_str:0000000000000329 .LASF12
     /tmp/ccnWWnMI.s:1728   .debug_str:00000000000002ed .LASF13
     /tmp/ccnWWnMI.s:1700   .debug_str:0000000000000133 .LASF14
     /tmp/ccnWWnMI.s:1680   .debug_str:0000000000000090 .LASF15
     /tmp/ccnWWnMI.s:1724   .debug_str:00000000000002bf .LASF16
     /tmp/ccnWWnMI.s:1710   .debug_str:0000000000000243 .LASF42
     /tmp/ccnWWnMI.s:1720   .debug_str:00000000000002aa .LASF17
     /tmp/ccnWWnMI.s:1666   .debug_str:000000000000002a .LASF18
     /tmp/ccnWWnMI.s:1746   .debug_str:000000000000037e .LASF19
     /tmp/ccnWWnMI.s:1662   .debug_str:0000000000000013 .LASF22
     /tmp/ccnWWnMI.s:1686   .debug_str:00000000000000be .LASF20
     /tmp/ccnWWnMI.s:1714   .debug_str:000000000000026a .LASF21
     /tmp/ccnWWnMI.s:1706   .debug_str:000000000000020a .LASF24
     /tmp/ccnWWnMI.s:1732   .debug_str:0000000000000302 .LASF23
     /tmp/ccnWWnMI.s:1668   .debug_str:000000000000002f .LASF25
     /tmp/ccnWWnMI.s:1672   .debug_str:000000000000005d .LASF26
     /tmp/ccnWWnMI.s:1690   .debug_str:00000000000000d7 .LASF27
     /tmp/ccnWWnMI.s:1730   .debug_str:00000000000002fd .LASF28
GAS LISTING /tmp/ccnWWnMI.s 			page 18


     /tmp/ccnWWnMI.s:1678   .debug_str:0000000000000073 .LASF29
     /tmp/ccnWWnMI.s:1738   .debug_str:000000000000031f .LASF43
     /tmp/ccnWWnMI.s:1716   .debug_str:000000000000026f .LASF44
     /tmp/ccnWWnMI.s:1676   .debug_str:000000000000006e .LASF30
     /tmp/ccnWWnMI.s:1708   .debug_str:0000000000000223 .LASF31
     /tmp/ccnWWnMI.s:1712   .debug_str:000000000000024f .LASF32
     /tmp/ccnWWnMI.s:255    .text:0000000000000160 .LFB3
     /tmp/ccnWWnMI.s:320    .text:00000000000001b8 .LFE3
     /tmp/ccnWWnMI.s:294    .text:0000000000000194 .LBB8
     /tmp/ccnWWnMI.s:316    .text:00000000000001b4 .LBE8
     /tmp/ccnWWnMI.s:1694   .debug_str:0000000000000106 .LASF33
     /tmp/ccnWWnMI.s:1412   .debug_loc:0000000000000000 .LLST7
     /tmp/ccnWWnMI.s:326    .text:00000000000001b8 .LFB2
     /tmp/ccnWWnMI.s:467    .text:0000000000000274 .LFE2
     /tmp/ccnWWnMI.s:1682   .debug_str:00000000000000a6 .LASF34
     /tmp/ccnWWnMI.s:1419   .debug_loc:0000000000000023 .LLST8
     /tmp/ccnWWnMI.s:1702   .debug_str:000000000000013f .LASF35
     /tmp/ccnWWnMI.s:1452   .debug_loc:00000000000000ab .LLST9
     /tmp/ccnWWnMI.s:1644   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccnWWnMI.s:1478   .debug_loc:000000000000010e .LLST10
     /tmp/ccnWWnMI.s:1498   .debug_loc:000000000000016b .LLST11
     /tmp/ccnWWnMI.s:371    .text:0000000000000200 .LVL25
     /tmp/ccnWWnMI.s:376    .text:000000000000020c .LVL26
     /tmp/ccnWWnMI.s:10     .text:0000000000000000 .LFB1
     /tmp/ccnWWnMI.s:201    .text:0000000000000120 .LFE1
     /tmp/ccnWWnMI.s:1736   .debug_str:0000000000000313 .LASF36
     /tmp/ccnWWnMI.s:1517   .debug_loc:00000000000001c7 .LLST0
     /tmp/ccnWWnMI.s:1551   .debug_loc:0000000000000250 .LLST1
     /tmp/ccnWWnMI.s:1742   .debug_str:0000000000000339 .LASF37
     /tmp/ccnWWnMI.s:1562   .debug_loc:0000000000000286 .LLST2
     /tmp/ccnWWnMI.s:63     .text:000000000000006c .LBB2
     /tmp/ccnWWnMI.s:79     .text:0000000000000080 .LBE2
     /tmp/ccnWWnMI.s:1734   .debug_str:000000000000030b .LASF38
     /tmp/ccnWWnMI.s:1573   .debug_loc:00000000000002bc .LLST3
     /tmp/ccnWWnMI.s:1584   .debug_loc:00000000000002f2 .LLST4
     /tmp/ccnWWnMI.s:207    .text:0000000000000120 .LFB0
     /tmp/ccnWWnMI.s:249    .text:0000000000000160 .LFE0
     /tmp/ccnWWnMI.s:1595   .debug_loc:0000000000000328 .LLST5
     /tmp/ccnWWnMI.s:1615   .debug_loc:0000000000000376 .LLST6
     /tmp/ccnWWnMI.s:238    .text:0000000000000150 .LVL19
     /tmp/ccnWWnMI.s:296    .text:0000000000000194 .LVL21
     /tmp/ccnWWnMI.s:311    .text:00000000000001a8 .LVL22
     /tmp/ccnWWnMI.s:329    .text:00000000000001b8 .LVL23
     /tmp/ccnWWnMI.s:347    .text:00000000000001d8 .LVL24
     /tmp/ccnWWnMI.s:389    .text:000000000000021c .LVL27
     /tmp/ccnWWnMI.s:393    .text:0000000000000224 .LVL28
     /tmp/ccnWWnMI.s:453    .text:000000000000026c .LVL34
     /tmp/ccnWWnMI.s:464    .text:0000000000000270 .LVL35
     /tmp/ccnWWnMI.s:404    .text:000000000000022c .LVL29
     /tmp/ccnWWnMI.s:411    .text:0000000000000234 .LVL30
     /tmp/ccnWWnMI.s:417    .text:000000000000023c .LVL31
     /tmp/ccnWWnMI.s:420    .text:0000000000000240 .LVL32
     /tmp/ccnWWnMI.s:434    .text:0000000000000254 .LVL33
     /tmp/ccnWWnMI.s:14     .text:0000000000000000 .LVL0
     /tmp/ccnWWnMI.s:58     .text:0000000000000068 .LVL1
     /tmp/ccnWWnMI.s:98     .text:0000000000000098 .LVL6
     /tmp/ccnWWnMI.s:110    .text:00000000000000a8 .LVL8
GAS LISTING /tmp/ccnWWnMI.s 			page 19


     /tmp/ccnWWnMI.s:166    .text:00000000000000ec .LVL12
     /tmp/ccnWWnMI.s:172    .text:00000000000000f0 .LVL13
     /tmp/ccnWWnMI.s:78     .text:0000000000000080 .LVL4
     /tmp/ccnWWnMI.s:147    .text:00000000000000d4 .LVL10
     /tmp/ccnWWnMI.s:157    .text:00000000000000e0 .LVL11
     /tmp/ccnWWnMI.s:87     .text:000000000000008c .LVL5
     /tmp/ccnWWnMI.s:62     .text:000000000000006c .LVL2
     /tmp/ccnWWnMI.s:101    .text:000000000000009c .LVL7
     /tmp/ccnWWnMI.s:134    .text:00000000000000c8 .LVL9
     /tmp/ccnWWnMI.s:210    .text:0000000000000120 .LVL14
     /tmp/ccnWWnMI.s:222    .text:0000000000000134 .LVL15
     /tmp/ccnWWnMI.s:227    .text:000000000000013c .LVL16
     /tmp/ccnWWnMI.s:232    .text:0000000000000144 .LVL17
     /tmp/ccnWWnMI.s:236    .text:0000000000000148 .LVL18
     /tmp/ccnWWnMI.s:488    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccnWWnMI.s:91     .text:0000000000000090 .LBB4
     /tmp/ccnWWnMI.s:136    .text:00000000000000c8 .LBE4
     /tmp/ccnWWnMI.s:161    .text:00000000000000e0 .LBB5
     /tmp/ccnWWnMI.s:168    .text:00000000000000ec .LBE5
     /tmp/ccnWWnMI.s:400    .text:0000000000000228 .LBB12
     /tmp/ccnWWnMI.s:422    .text:0000000000000240 .LBE12
     /tmp/ccnWWnMI.s:436    .text:0000000000000254 .LBB13
     /tmp/ccnWWnMI.s:459    .text:000000000000026c .LBE13

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
